-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.2
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity singleDecision is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_stim_reset : IN STD_LOGIC_VECTOR (15 downto 0);
    V_stim_reset : IN STD_LOGIC_VECTOR (15 downto 0);
    set_thresh : IN STD_LOGIC_VECTOR (15 downto 0);
    v_thresh : IN STD_LOGIC_VECTOR (31 downto 0);
    a_thresh : IN STD_LOGIC_VECTOR (31 downto 0);
    a_flip : IN STD_LOGIC_VECTOR (31 downto 0);
    v_flip : IN STD_LOGIC_VECTOR (31 downto 0);
    datapoint : IN STD_LOGIC_VECTOR (15 downto 0);
    out_r : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_r_ap_vld : OUT STD_LOGIC;
    stim : OUT STD_LOGIC_VECTOR (15 downto 0);
    stim_ap_vld : OUT STD_LOGIC );
end;


architecture behav of singleDecision is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "singleDecision,hls_ip_2014_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.718000,HLS_SYN_LAT=18,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_36 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_const_lv32_3E8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111101000";
    constant ap_const_lv32_384 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110000100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal AstimDelay : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal VstimDelay : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal vthresh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100001";
    signal athresh : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    signal aflip : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    signal vflip : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    signal recentdatapoints_len : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal recentdatapoints_head_i : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal recentdatapoints_sum : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal recentdatapoints_data_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal recentdatapoints_data_ce0 : STD_LOGIC;
    signal recentdatapoints_data_we0 : STD_LOGIC;
    signal recentdatapoints_data_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal recentdatapoints_data_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal AbeatDelay : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal VbeatDelay : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal VbeatFallDelay : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal recentVBools_sum : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal recentVBools_len : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal recentVBools_head_i : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal recentVBools_data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal recentVBools_data_ce0 : STD_LOGIC;
    signal recentVBools_data_we0 : STD_LOGIC;
    signal recentVBools_data_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal recentVBools_data_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_sample_is_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal recentABools_sum : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal recentABools_len : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal recentABools_head_i : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal recentABools_data_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal recentABools_data_ce0 : STD_LOGIC;
    signal recentABools_data_we0 : STD_LOGIC;
    signal recentABools_data_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal recentABools_data_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_sample_is_A : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal recentdatapoints_data_addr_reg_1196 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_fu_406_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1201 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_420_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1206 : STD_LOGIC_VECTOR (31 downto 0);
    signal recentdatapoints_data_load_reg_1216 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_tmp_i_fu_451_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_tmp_i_reg_1221 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_i_fu_542_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_i_reg_1233 : STD_LOGIC_VECTOR (31 downto 0);
    signal datapointV_fu_568_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal datapointV_reg_1238 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1253 : STD_LOGIC_VECTOR (0 downto 0);
    signal recentVBools_data_addr_reg_1264 : STD_LOGIC_VECTOR (3 downto 0);
    signal recentVBools_data_load_reg_1269 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_tmp_i1_fu_619_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_tmp_i1_reg_1274 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i1_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_reg_1280 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_i2_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_i2_reg_1290 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_704_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1295 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_714_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_724_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal last_sample_is_V_load_load_fu_786_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i3_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i3_reg_1325 : STD_LOGIC_VECTOR (0 downto 0);
    signal datapointA_fu_811_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal datapointA_reg_1335 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_1340 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1355 : STD_LOGIC_VECTOR (0 downto 0);
    signal recentABools_data_addr_reg_1366 : STD_LOGIC_VECTOR (4 downto 0);
    signal recentABools_data_load_reg_1371 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_tmp_i2_fu_879_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_tmp_i2_reg_1376 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i4_5_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i4_5_reg_1382 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_i5_fu_954_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_i5_reg_1392 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_1020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1397 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_sample_is_A_load_load_fu_1026_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1411 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_1416 : STD_LOGIC_VECTOR (0 downto 0);
    signal VbeatDelay_new_1_reg_259 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal VbeatFallDelay_new_1_reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal last_sample_is_V_loc_2_reg_290 : STD_LOGIC_VECTOR (0 downto 0);
    signal AbeatDelay_new_reg_308 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond2_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_323 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_4_fu_395_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal recentdatapoints_head_i_temp: signed (32-1 downto 0);
    signal tmp_39_i_fu_491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_i_fu_483_p3_temp: signed (32-1 downto 0);
    signal tmp_i2_fu_603_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal recentVBools_head_i_temp: signed (32-1 downto 0);
    signal tmp_46_i_fu_689_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_i1_fu_681_p3_temp: signed (32-1 downto 0);
    signal tmp_i4_fu_807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_tmp_i_reg_1221_temp: signed (32-1 downto 0);
    signal tmp_i5_fu_863_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal recentABools_head_i_temp: signed (32-1 downto 0);
    signal tmp_53_i_fu_949_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_i2_fu_941_p3_temp: signed (32-1 downto 0);
    signal tmp_2_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_i_fu_530_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_i_fu_753_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_i_fu_649_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_i_fu_983_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_i_fu_909_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal AstimDelay_load_op_fu_400_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal VstimDelay_load_op_fu_414_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_i_fu_440_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_i_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_465_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_470_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_478_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_fu_483_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_i_fu_516_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal recentdatapoints_data_load_reg_1216_temp: signed (16-1 downto 0);
    signal tmp_i_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_i_fu_516_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal recentdatapoints_sum_loc_i_fu_522_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_i_fu_530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal datapoint_temp: signed (16-1 downto 0);
    signal recentdatapoints_len_load_op_fu_536_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i9_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_583_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_583_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_583_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_i_fu_608_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_i_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal recentVBools_len_load_op_fu_643_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_fu_663_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_668_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_676_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i1_fu_681_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal extLd1_fu_737_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_i_fu_740_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal recentVBools_sum_loc_i_fu_746_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_assign_1_fu_734_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_i_fu_765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0_i_cast_fu_770_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_1_fu_774_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_843_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_843_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_843_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_i_fu_868_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_i_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal recentABools_len_load_op_fu_903_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_4_fu_923_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_928_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_fu_936_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i2_fu_941_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal extLd2_fu_967_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_i_fu_970_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal recentABools_sum_loc_i_fu_976_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_assign_2_fu_964_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_i2_fu_995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0_i2_cast_fu_1000_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_3_fu_1004_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_1010_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_15_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_fu_1098_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal storemerge1_fu_1106_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal storemerge1_cast_fu_1118_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal storemerge1_fu_1106_p3_temp: signed (6-1 downto 0);
    signal tmp_19_fu_1123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_1151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond8_fu_1129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_1157_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal stim_new_1_fu_1171_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal stim_new_1_cast_fu_1183_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stim_new_1_fu_1171_p3_temp: signed (6-1 downto 0);
    signal grp_fu_583_ce : STD_LOGIC;
    signal grp_fu_843_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_bdd_242 : BOOLEAN;
    signal ap_sig_bdd_234 : BOOLEAN;
    signal ap_sig_bdd_214 : BOOLEAN;
    signal ap_sig_bdd_209 : BOOLEAN;

    component singleDecision_mul_32s_16s_32_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component singleDecision_recentdatapoints_data IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component singleDecision_recentVBools_data IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component singleDecision_recentABools_data IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    recentdatapoints_data_U : component singleDecision_recentdatapoints_data
    generic map (
        DataWidth => 16,
        AddressRange => 20,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => recentdatapoints_data_address0,
        ce0 => recentdatapoints_data_ce0,
        we0 => recentdatapoints_data_we0,
        d0 => recentdatapoints_data_d0,
        q0 => recentdatapoints_data_q0);

    recentVBools_data_U : component singleDecision_recentVBools_data
    generic map (
        DataWidth => 1,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => recentVBools_data_address0,
        ce0 => recentVBools_data_ce0,
        we0 => recentVBools_data_we0,
        d0 => recentVBools_data_d0,
        q0 => recentVBools_data_q0);

    recentABools_data_U : component singleDecision_recentABools_data
    generic map (
        DataWidth => 1,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => recentABools_data_address0,
        ce0 => recentABools_data_ce0,
        we0 => recentABools_data_we0,
        d0 => recentABools_data_d0,
        q0 => recentABools_data_q0);

    singleDecision_mul_32s_16s_32_3_U1 : component singleDecision_mul_32s_16s_32_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_583_p0,
        din1 => grp_fu_583_p1,
        ce => grp_fu_583_ce,
        dout => grp_fu_583_p2);

    singleDecision_mul_32s_16s_32_3_U2 : component singleDecision_mul_32s_16s_32_3
    generic map (
        ID => 2,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_843_p0,
        din1 => grp_fu_843_p1,
        ce => grp_fu_843_ce,
        dout => grp_fu_843_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- AbeatDelay_new_reg_308 assign process. --
    AbeatDelay_new_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_ST_st18_fsm_17 = ap_CS_fsm) and not((ap_const_lv1_0 = or_cond2_fu_1030_p2)) and not((ap_const_lv1_0 = last_sample_is_A_load_load_fu_1026_p1))) or ((ap_ST_st18_fsm_17 = ap_CS_fsm) and (ap_const_lv1_0 = or_cond2_fu_1030_p2) and (ap_const_lv1_0 = last_sample_is_A_load_load_fu_1026_p1)) or ((ap_ST_st18_fsm_17 = ap_CS_fsm) and (ap_const_lv1_0 = or_cond2_fu_1030_p2) and not((ap_const_lv1_0 = last_sample_is_A_load_load_fu_1026_p1))))) then 
                AbeatDelay_new_reg_308 <= tmp_4_reg_1295;
            elsif (((ap_ST_st18_fsm_17 = ap_CS_fsm) and not((ap_const_lv1_0 = or_cond2_fu_1030_p2)) and (ap_const_lv1_0 = last_sample_is_A_load_load_fu_1026_p1))) then 
                AbeatDelay_new_reg_308 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- VbeatDelay_new_1_reg_259 assign process. --
    VbeatDelay_new_1_reg_259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_ST_st10_fsm_9 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_3_fu_780_p2)) and not((ap_const_lv1_0 = last_sample_is_V_load_load_fu_786_p1))) or ((ap_ST_st10_fsm_9 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_780_p2) and not((ap_const_lv1_0 = last_sample_is_V_load_load_fu_786_p1))) or ((ap_ST_st10_fsm_9 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_780_p2) and (ap_const_lv1_0 = last_sample_is_V_load_load_fu_786_p1)))) then 
                VbeatDelay_new_1_reg_259 <= tmp_5_fu_714_p2;
            elsif (((ap_ST_st10_fsm_9 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_3_fu_780_p2)) and (ap_const_lv1_0 = last_sample_is_V_load_load_fu_786_p1))) then 
                VbeatDelay_new_1_reg_259 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- VbeatFallDelay_new_1_reg_275 assign process. --
    VbeatFallDelay_new_1_reg_275_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st10_fsm_9 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_780_p2) and not((ap_const_lv1_0 = last_sample_is_V_load_load_fu_786_p1)))) then 
                VbeatFallDelay_new_1_reg_275 <= ap_const_lv32_0;
            elsif ((((ap_ST_st10_fsm_9 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_3_fu_780_p2)) and (ap_const_lv1_0 = last_sample_is_V_load_load_fu_786_p1)) or ((ap_ST_st10_fsm_9 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_3_fu_780_p2)) and not((ap_const_lv1_0 = last_sample_is_V_load_load_fu_786_p1))) or ((ap_ST_st10_fsm_9 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_780_p2) and (ap_const_lv1_0 = last_sample_is_V_load_load_fu_786_p1)))) then 
                VbeatFallDelay_new_1_reg_275 <= tmp_6_fu_724_p2;
            end if; 
        end if;
    end process;

    -- last_sample_is_A assign process. --
    last_sample_is_A_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st18_fsm_17 = ap_CS_fsm)) then
                if (ap_sig_bdd_234) then 
                    last_sample_is_A <= ap_const_lv1_1;
                elsif (ap_sig_bdd_242) then 
                    last_sample_is_A <= ap_const_lv1_0;
                end if;
            end if; 
        end if;
    end process;

    -- last_sample_is_V assign process. --
    last_sample_is_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then
                if (ap_sig_bdd_209) then 
                    last_sample_is_V <= ap_const_lv1_1;
                elsif (ap_sig_bdd_214) then 
                    last_sample_is_V <= ap_const_lv1_0;
                end if;
            end if; 
        end if;
    end process;

    -- last_sample_is_V_loc_2_reg_290 assign process. --
    last_sample_is_V_loc_2_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st10_fsm_9 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_780_p2) and not((ap_const_lv1_0 = last_sample_is_V_load_load_fu_786_p1)))) then 
                last_sample_is_V_loc_2_reg_290 <= ap_const_lv1_0;
            elsif ((((ap_ST_st10_fsm_9 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_3_fu_780_p2)) and not((ap_const_lv1_0 = last_sample_is_V_load_load_fu_786_p1))) or ((ap_ST_st10_fsm_9 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_3_fu_780_p2) and (ap_const_lv1_0 = last_sample_is_V_load_load_fu_786_p1)))) then 
                last_sample_is_V_loc_2_reg_290 <= last_sample_is_V;
            elsif (((ap_ST_st10_fsm_9 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_3_fu_780_p2)) and (ap_const_lv1_0 = last_sample_is_V_load_load_fu_786_p1))) then 
                last_sample_is_V_loc_2_reg_290 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    -- tmp_14_reg_323 assign process. --
    tmp_14_reg_323_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st18_fsm_17 = ap_CS_fsm) and (ap_const_lv1_0 = or_cond2_fu_1030_p2) and not((ap_const_lv1_0 = last_sample_is_A_load_load_fu_1026_p1)))) then 
                tmp_14_reg_323 <= ap_const_lv1_0;
            elsif ((((ap_ST_st18_fsm_17 = ap_CS_fsm) and not((ap_const_lv1_0 = or_cond2_fu_1030_p2)) and not((ap_const_lv1_0 = last_sample_is_A_load_load_fu_1026_p1))) or ((ap_ST_st18_fsm_17 = ap_CS_fsm) and (ap_const_lv1_0 = or_cond2_fu_1030_p2) and (ap_const_lv1_0 = last_sample_is_A_load_load_fu_1026_p1)))) then 
                tmp_14_reg_323 <= last_sample_is_A;
            elsif (((ap_ST_st18_fsm_17 = ap_CS_fsm) and not((ap_const_lv1_0 = or_cond2_fu_1030_p2)) and (ap_const_lv1_0 = last_sample_is_A_load_load_fu_1026_p1))) then 
                tmp_14_reg_323 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st19_fsm_18 = ap_CS_fsm)) then
                AbeatDelay <= AbeatDelay_new_reg_308;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then
                AstimDelay <= tmp_7_fu_406_p3;
                VstimDelay <= tmp_8_fu_420_p3;
                recentdatapoints_data_addr_reg_1196 <= tmp_i_4_fu_395_p1(5 - 1 downto 0);
                tmp_7_reg_1201 <= tmp_7_fu_406_p3;
                tmp_8_reg_1206 <= tmp_8_fu_420_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st11_fsm_10 = ap_CS_fsm)) then
                VbeatDelay <= VbeatDelay_new_1_reg_259;
                VbeatFallDelay <= VbeatFallDelay_new_1_reg_275;
                datapointA_reg_1335 <= datapointA_fu_811_p3;
                tmp_13_reg_1340 <= tmp_13_fu_830_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)) and (ap_const_lv1_0 = tmp_2_fu_361_p2))) then
                aflip <= a_flip;
                athresh <= a_thresh;
                vflip <= v_flip;
                vthresh <= v_thresh;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then
                datapointV_reg_1238 <= datapointV_fu_568_p3;
                recentdatapoints_len <= tmp_36_i_fu_542_p3;
                recentdatapoints_sum <= tmp_35_i_fu_530_p2;
                tmp_36_i_reg_1233 <= tmp_36_i_fu_542_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st17_fsm_16 = ap_CS_fsm)) then
                icmp_reg_1397 <= icmp_fu_1020_p2;
                recentABools_sum <= tmp_49_i_fu_983_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st9_fsm_8 = ap_CS_fsm)) then
                not_tmp_i2_reg_1290 <= not_tmp_i2_fu_694_p2;
                recentVBools_len <= tmp_43_i_fu_649_p3;
                tmp_i1_reg_1280 <= tmp_i1_fu_637_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st16_fsm_15 = ap_CS_fsm)) then
                not_tmp_i5_reg_1392 <= not_tmp_i5_fu_954_p2;
                recentABools_len <= tmp_50_i_fu_909_p3;
                tmp_i4_5_reg_1382 <= tmp_i4_5_fu_897_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st8_fsm_7 = ap_CS_fsm)) then
                p_tmp_i1_reg_1274 <= p_tmp_i1_fu_619_p3;
                recentVBools_data_load_reg_1269 <= recentVBools_data_q0;
                recentVBools_head_i <= p_tmp_i1_fu_619_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st15_fsm_14 = ap_CS_fsm)) then
                p_tmp_i2_reg_1376 <= p_tmp_i2_fu_879_p3;
                recentABools_data_load_reg_1371 <= recentABools_data_q0;
                recentABools_head_i <= p_tmp_i2_fu_879_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
                p_tmp_i_reg_1221 <= p_tmp_i_fu_451_p3;
                recentdatapoints_data_load_reg_1216 <= recentdatapoints_data_q0;
                recentdatapoints_head_i <= p_tmp_i_fu_451_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st14_fsm_13 = ap_CS_fsm)) then
                recentABools_data_addr_reg_1366 <= tmp_i5_fu_863_p1(5 - 1 downto 0);
                tmp_11_reg_1355 <= tmp_11_fu_853_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then
                recentVBools_data_addr_reg_1264 <= tmp_i2_fu_603_p1(4 - 1 downto 0);
                tmp_s_reg_1253 <= tmp_s_fu_593_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then
                recentVBools_sum <= tmp_42_i_fu_753_p2;
                tmp_4_reg_1295 <= tmp_4_fu_704_p2;
                tmp_i3_reg_1325 <= tmp_i3_fu_802_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st18_fsm_17 = ap_CS_fsm)) then
                tmp_20_reg_1411 <= tmp_20_fu_1046_p2;
                tmp_23_reg_1416 <= tmp_23_fu_1051_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    AstimDelay_load_op_fu_400_p2 <= std_logic_vector(unsigned(AstimDelay) + unsigned(ap_const_lv32_1));
    VstimDelay_load_op_fu_414_p2 <= std_logic_vector(unsigned(VstimDelay) + unsigned(ap_const_lv32_1));

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st19_fsm_18 = ap_CS_fsm)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st19_fsm_18 = ap_CS_fsm)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_209 assign process. --
    ap_sig_bdd_209_assign_proc : process(last_sample_is_V_load_load_fu_786_p1, tmp_3_fu_780_p2)
    begin
                ap_sig_bdd_209 <= (not((ap_const_lv1_0 = tmp_3_fu_780_p2)) and (ap_const_lv1_0 = last_sample_is_V_load_load_fu_786_p1));
    end process;


    -- ap_sig_bdd_214 assign process. --
    ap_sig_bdd_214_assign_proc : process(last_sample_is_V_load_load_fu_786_p1, tmp_3_fu_780_p2)
    begin
                ap_sig_bdd_214 <= ((ap_const_lv1_0 = tmp_3_fu_780_p2) and not((ap_const_lv1_0 = last_sample_is_V_load_load_fu_786_p1)));
    end process;


    -- ap_sig_bdd_234 assign process. --
    ap_sig_bdd_234_assign_proc : process(last_sample_is_A_load_load_fu_1026_p1, or_cond2_fu_1030_p2)
    begin
                ap_sig_bdd_234 <= (not((ap_const_lv1_0 = or_cond2_fu_1030_p2)) and (ap_const_lv1_0 = last_sample_is_A_load_load_fu_1026_p1));
    end process;


    -- ap_sig_bdd_242 assign process. --
    ap_sig_bdd_242_assign_proc : process(last_sample_is_A_load_load_fu_1026_p1, or_cond2_fu_1030_p2)
    begin
                ap_sig_bdd_242 <= ((ap_const_lv1_0 = or_cond2_fu_1030_p2) and not((ap_const_lv1_0 = last_sample_is_A_load_load_fu_1026_p1)));
    end process;

    datapointA_fu_811_p3 <= 
        recentdatapoints_data_q0 when (tmp_i3_reg_1325(0) = '1') else 
        ap_const_lv16_0;
    datapointV_fu_568_p3 <= 
        ap_const_lv16_0 when (tmp_i9_fu_562_p2(0) = '1') else 
        recentdatapoints_data_q0;
    extLd1_fu_737_p1 <= std_logic_vector(resize(unsigned(recentVBools_data_load_reg_1269),32));
    extLd2_fu_967_p1 <= std_logic_vector(resize(unsigned(recentABools_data_load_reg_1371),32));
    grp_fu_583_ce <= ap_const_logic_1;
    grp_fu_583_p0 <= vflip;
    grp_fu_583_p1 <= datapointV_reg_1238;
    grp_fu_843_ce <= ap_const_logic_1;
    grp_fu_843_p0 <= aflip;
    grp_fu_843_p1 <= datapointA_reg_1335;
    i_1_fu_478_p2 <= std_logic_vector(unsigned(p_tmp_i_reg_1221) + unsigned(ap_const_lv32_13));
    i_2_fu_663_p2 <= std_logic_vector(unsigned(p_tmp_i1_reg_1274) + unsigned(ap_const_lv32_FFFFFFFF));
    i_3_fu_676_p2 <= std_logic_vector(unsigned(p_tmp_i1_reg_1274) + unsigned(ap_const_lv32_A));
    i_4_fu_923_p2 <= std_logic_vector(unsigned(p_tmp_i2_reg_1376) + unsigned(ap_const_lv32_FFFFFFFF));
    i_5_fu_936_p2 <= std_logic_vector(unsigned(p_tmp_i2_reg_1376) + unsigned(ap_const_lv32_1D));
    i_fu_465_p2 <= std_logic_vector(unsigned(p_tmp_i_reg_1221) + unsigned(ap_const_lv32_FFFFFFFF));
    icmp_fu_1020_p2 <= "1" when (signed(tmp_27_fu_1010_p4) > signed(ap_const_lv28_0)) else "0";
    last_sample_is_A_load_load_fu_1026_p1 <= last_sample_is_A;
    last_sample_is_V_load_load_fu_786_p1 <= last_sample_is_V;
    not_tmp_i2_fu_694_p2 <= "0" when (tmp_43_i_fu_649_p3 = ap_const_lv32_0) else "1";
    not_tmp_i5_fu_954_p2 <= "0" when (tmp_50_i_fu_909_p3 = ap_const_lv32_0) else "1";
    or_cond1_fu_1151_p2 <= (tmp1_fu_1146_p2 and tmp_21_fu_1134_p2);
    or_cond2_fu_1030_p2 <= (icmp_reg_1397 and tmp_13_reg_1340);
    or_cond4_fu_1092_p2 <= (tmp_17_fu_1080_p2 or tmp_18_fu_1086_p2);
    or_cond8_fu_1129_p2 <= (tmp_19_fu_1123_p2 and tmp_20_reg_1411);
    or_cond_fu_1068_p2 <= (tmp_15_fu_1056_p2 or tmp_16_fu_1062_p2);
    out_r <= std_logic_vector(resize(unsigned(storemerge1_cast_fu_1118_p0),16));

    -- out_r_ap_vld assign process. --
    out_r_ap_vld_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st19_fsm_18 = ap_CS_fsm)) then 
            out_r_ap_vld <= ap_const_logic_1;
        else 
            out_r_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_i2_cast_fu_1000_p1 <= std_logic_vector(resize(unsigned(p_0_i2_fu_995_p2),32));
    p_0_i2_fu_995_p2 <= (recentABools_data_q0 and not_tmp_i5_reg_1392);
    p_0_i_cast_fu_770_p1 <= std_logic_vector(resize(unsigned(p_0_i_fu_765_p2),32));
    p_0_i_fu_765_p2 <= (recentVBools_data_q0 and not_tmp_i2_reg_1290);
    p_i1_fu_681_p3 <= 
        i_3_fu_676_p2 when (tmp_25_fu_668_p3(0) = '1') else 
        i_2_fu_663_p2;
    p_i2_fu_941_p3 <= 
        i_5_fu_936_p2 when (tmp_26_fu_928_p3(0) = '1') else 
        i_4_fu_923_p2;
    p_i_fu_483_p3 <= 
        i_1_fu_478_p2 when (tmp_12_fu_470_p3(0) = '1') else 
        i_fu_465_p2;
    p_s_fu_1157_p3 <= 
        ap_const_lv6_36 when (or_cond1_fu_1151_p2(0) = '1') else 
        ap_const_lv6_21;
    p_tmp_i1_fu_619_p3 <= 
        ap_const_lv32_0 when (tmp_45_i_fu_613_p2(0) = '1') else 
        tmp_44_i_fu_608_p2;
    p_tmp_i2_fu_879_p3 <= 
        ap_const_lv32_0 when (tmp_52_i_fu_873_p2(0) = '1') else 
        tmp_51_i_fu_868_p2;
    p_tmp_i_fu_451_p3 <= 
        ap_const_lv32_0 when (tmp_38_i_fu_445_p2(0) = '1') else 
        tmp_37_i_fu_440_p2;

    -- recentABools_data_address0 assign process. --
    recentABools_data_address0_assign_proc : process(ap_CS_fsm, recentABools_data_addr_reg_1366, tmp_i5_fu_863_p1, tmp_53_i_fu_949_p1)
    begin
        if ((ap_ST_st15_fsm_14 = ap_CS_fsm)) then 
            recentABools_data_address0 <= recentABools_data_addr_reg_1366;
        elsif ((ap_ST_st16_fsm_15 = ap_CS_fsm)) then 
            recentABools_data_address0 <= tmp_53_i_fu_949_p1(5 - 1 downto 0);
        elsif ((ap_ST_st14_fsm_13 = ap_CS_fsm)) then 
            recentABools_data_address0 <= tmp_i5_fu_863_p1(5 - 1 downto 0);
        else 
            recentABools_data_address0 <= "XXXXX";
        end if; 
    end process;


    -- recentABools_data_ce0 assign process. --
    recentABools_data_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm))) then 
            recentABools_data_ce0 <= ap_const_logic_1;
        else 
            recentABools_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    recentABools_data_d0 <= tmp_11_reg_1355;

    -- recentABools_data_we0 assign process. --
    recentABools_data_we0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st15_fsm_14 = ap_CS_fsm))) then 
            recentABools_data_we0 <= ap_const_logic_1;
        else 
            recentABools_data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    recentABools_len_load_op_fu_903_p2 <= std_logic_vector(unsigned(recentABools_len) + unsigned(ap_const_lv32_1));
    recentABools_sum_loc_i_fu_976_p3 <= 
        tmp_47_i_fu_970_p2 when (tmp_i4_5_reg_1382(0) = '1') else 
        recentABools_sum;

    -- recentVBools_data_address0 assign process. --
    recentVBools_data_address0_assign_proc : process(ap_CS_fsm, recentVBools_data_addr_reg_1264, tmp_i2_fu_603_p1, tmp_46_i_fu_689_p1)
    begin
        if ((ap_ST_st8_fsm_7 = ap_CS_fsm)) then 
            recentVBools_data_address0 <= recentVBools_data_addr_reg_1264;
        elsif ((ap_ST_st9_fsm_8 = ap_CS_fsm)) then 
            recentVBools_data_address0 <= tmp_46_i_fu_689_p1(4 - 1 downto 0);
        elsif ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then 
            recentVBools_data_address0 <= tmp_i2_fu_603_p1(4 - 1 downto 0);
        else 
            recentVBools_data_address0 <= "XXXX";
        end if; 
    end process;


    -- recentVBools_data_ce0 assign process. --
    recentVBools_data_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st7_fsm_6 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm))) then 
            recentVBools_data_ce0 <= ap_const_logic_1;
        else 
            recentVBools_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    recentVBools_data_d0 <= tmp_s_reg_1253;

    -- recentVBools_data_we0 assign process. --
    recentVBools_data_we0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st8_fsm_7 = ap_CS_fsm))) then 
            recentVBools_data_we0 <= ap_const_logic_1;
        else 
            recentVBools_data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    recentVBools_len_load_op_fu_643_p2 <= std_logic_vector(unsigned(recentVBools_len) + unsigned(ap_const_lv32_1));
    recentVBools_sum_loc_i_fu_746_p3 <= 
        tmp_40_i_fu_740_p2 when (tmp_i1_reg_1280(0) = '1') else 
        recentVBools_sum;

    -- recentdatapoints_data_address0 assign process. --
    recentdatapoints_data_address0_assign_proc : process(ap_CS_fsm, recentdatapoints_data_addr_reg_1196, tmp_i_4_fu_395_p1, tmp_39_i_fu_491_p1, tmp_i4_fu_807_p1)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then 
            recentdatapoints_data_address0 <= recentdatapoints_data_addr_reg_1196;
        elsif ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then 
            recentdatapoints_data_address0 <= tmp_i4_fu_807_p1(5 - 1 downto 0);
        elsif ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then 
            recentdatapoints_data_address0 <= tmp_39_i_fu_491_p1(5 - 1 downto 0);
        elsif ((ap_ST_st1_fsm_0 = ap_CS_fsm)) then 
            recentdatapoints_data_address0 <= tmp_i_4_fu_395_p1(5 - 1 downto 0);
        else 
            recentdatapoints_data_address0 <= "XXXXX";
        end if; 
    end process;


    -- recentdatapoints_data_ce0 assign process. --
    recentdatapoints_data_ce0_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0))) or (ap_ST_st2_fsm_1 = ap_CS_fsm) or (ap_ST_st3_fsm_2 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm))) then 
            recentdatapoints_data_ce0 <= ap_const_logic_1;
        else 
            recentdatapoints_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    recentdatapoints_data_d0 <= datapoint;

    -- recentdatapoints_data_we0 assign process. --
    recentdatapoints_data_we0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm))) then 
            recentdatapoints_data_we0 <= ap_const_logic_1;
        else 
            recentdatapoints_data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    recentdatapoints_len_load_op_fu_536_p2 <= std_logic_vector(unsigned(recentdatapoints_len) + unsigned(ap_const_lv32_1));
    recentdatapoints_sum_loc_i_fu_522_p3 <= 
        tmp_33_i_fu_516_p2 when (tmp_i_fu_503_p2(0) = '1') else 
        recentdatapoints_sum;
    stim <= std_logic_vector(resize(unsigned(stim_new_1_cast_fu_1183_p0),16));

    -- stim_ap_vld assign process. --
    stim_ap_vld_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st19_fsm_18 = ap_CS_fsm)) then 
            stim_ap_vld <= ap_const_logic_1;
        else 
            stim_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    
    stim_new_1_fu_1171_p3_temp <= signed(stim_new_1_fu_1171_p3);
    stim_new_1_cast_fu_1183_p0 <= std_logic_vector(resize(stim_new_1_fu_1171_p3_temp,7));

    stim_new_1_fu_1171_p3 <= 
        p_s_fu_1157_p3 when (tmp_24_fu_1165_p2(0) = '1') else 
        ap_const_lv6_0;
    
    storemerge1_fu_1106_p3_temp <= signed(storemerge1_fu_1106_p3);
    storemerge1_cast_fu_1118_p0 <= std_logic_vector(resize(storemerge1_fu_1106_p3_temp,7));

    storemerge1_fu_1106_p3 <= 
        storemerge_fu_1098_p3 when (or_cond_fu_1068_p2(0) = '1') else 
        ap_const_lv6_36;
    storemerge_fu_1098_p3 <= 
        ap_const_lv6_0 when (or_cond4_fu_1092_p2(0) = '1') else 
        ap_const_lv6_21;
    sum_1_fu_774_p2 <= std_logic_vector(unsigned(p_0_i_cast_fu_770_p1) + unsigned(recentVBools_sum));
    sum_3_fu_1004_p2 <= std_logic_vector(unsigned(p_0_i2_cast_fu_1000_p1) + unsigned(recentABools_sum));
    tmp1_fu_1146_p2 <= (tmp_22_fu_1140_p2 and tmp_23_reg_1416);
    tmp_11_fu_853_p2 <= "1" when (signed(grp_fu_843_p2) > signed(athresh)) else "0";
    tmp_12_fu_470_p3 <= i_fu_465_p2(31 downto 31);
    tmp_13_fu_830_p2 <= "1" when (signed(VbeatDelay_new_1_reg_259) > signed(VbeatFallDelay_new_1_reg_275)) else "0";
    tmp_15_fu_1056_p2 <= "0" when (VbeatDelay_new_1_reg_259 = ap_const_lv32_0) else "1";
    tmp_16_fu_1062_p2 <= (last_sample_is_V_loc_2_reg_290 xor ap_const_lv1_1);
    tmp_17_fu_1080_p2 <= "0" when (AbeatDelay_new_reg_308 = ap_const_lv32_0) else "1";
    tmp_18_fu_1086_p2 <= (tmp_14_reg_323 xor ap_const_lv1_1);
    tmp_19_fu_1123_p2 <= "1" when (signed(AbeatDelay_new_reg_308) > signed(ap_const_lv32_3E8)) else "0";
    tmp_1_fu_351_p2 <= "1" when (V_stim_reset = ap_const_lv16_0) else "0";
    tmp_20_fu_1046_p2 <= "1" when (signed(tmp_7_reg_1201) > signed(ap_const_lv32_1E)) else "0";
    tmp_21_fu_1134_p2 <= "1" when (signed(VbeatDelay_new_1_reg_259) > signed(AbeatDelay_new_reg_308)) else "0";
    tmp_22_fu_1140_p2 <= "1" when (signed(AbeatDelay_new_reg_308) > signed(ap_const_lv32_384)) else "0";
    tmp_23_fu_1051_p2 <= "1" when (signed(tmp_8_reg_1206) > signed(ap_const_lv32_B)) else "0";
    tmp_24_fu_1165_p2 <= (or_cond1_fu_1151_p2 or or_cond8_fu_1129_p2);
    tmp_25_fu_668_p3 <= i_2_fu_663_p2(31 downto 31);
    tmp_26_fu_928_p3 <= i_4_fu_923_p2(31 downto 31);
    tmp_27_fu_1010_p4 <= sum_3_fu_1004_p2(31 downto 4);
    tmp_2_fu_361_p2 <= "1" when (set_thresh = ap_const_lv16_0) else "0";
    
    recentdatapoints_data_load_reg_1216_temp <= signed(recentdatapoints_data_load_reg_1216);
    tmp_33_i_fu_516_p1 <= std_logic_vector(resize(recentdatapoints_data_load_reg_1216_temp,32));

    tmp_33_i_fu_516_p2 <= std_logic_vector(unsigned(recentdatapoints_sum) - unsigned(tmp_33_i_fu_516_p1));
    
    datapoint_temp <= signed(datapoint);
    tmp_35_i_fu_530_p1 <= std_logic_vector(resize(datapoint_temp,32));

    tmp_35_i_fu_530_p2 <= std_logic_vector(unsigned(recentdatapoints_sum_loc_i_fu_522_p3) + unsigned(tmp_35_i_fu_530_p1));
    tmp_36_i_fu_542_p3 <= 
        ap_const_lv32_14 when (tmp_i_fu_503_p2(0) = '1') else 
        recentdatapoints_len_load_op_fu_536_p2;
    tmp_37_i_fu_440_p2 <= std_logic_vector(unsigned(recentdatapoints_head_i) + unsigned(ap_const_lv32_1));
    tmp_38_i_fu_445_p2 <= "1" when (tmp_37_i_fu_440_p2 = ap_const_lv32_14) else "0";
    
    p_i_fu_483_p3_temp <= signed(p_i_fu_483_p3);
    tmp_39_i_fu_491_p1 <= std_logic_vector(resize(p_i_fu_483_p3_temp,64));

    tmp_3_fu_780_p2 <= "1" when (signed(sum_1_fu_774_p2) > signed(ap_const_lv32_5)) else "0";
    tmp_40_i_fu_740_p2 <= std_logic_vector(unsigned(recentVBools_sum) - unsigned(extLd1_fu_737_p1));
    tmp_42_i_fu_753_p2 <= std_logic_vector(unsigned(recentVBools_sum_loc_i_fu_746_p3) + unsigned(val_assign_1_fu_734_p1));
    tmp_43_i_fu_649_p3 <= 
        ap_const_lv32_B when (tmp_i1_fu_637_p2(0) = '1') else 
        recentVBools_len_load_op_fu_643_p2;
    tmp_44_i_fu_608_p2 <= std_logic_vector(unsigned(recentVBools_head_i) + unsigned(ap_const_lv32_1));
    tmp_45_i_fu_613_p2 <= "1" when (tmp_44_i_fu_608_p2 = ap_const_lv32_B) else "0";
    
    p_i1_fu_681_p3_temp <= signed(p_i1_fu_681_p3);
    tmp_46_i_fu_689_p1 <= std_logic_vector(resize(p_i1_fu_681_p3_temp,64));

    tmp_47_i_fu_970_p2 <= std_logic_vector(unsigned(recentABools_sum) - unsigned(extLd2_fu_967_p1));
    tmp_49_i_fu_983_p2 <= std_logic_vector(unsigned(recentABools_sum_loc_i_fu_976_p3) + unsigned(val_assign_2_fu_964_p1));
    tmp_4_fu_704_p2 <= std_logic_vector(unsigned(AbeatDelay) + unsigned(ap_const_lv32_1));
    tmp_50_i_fu_909_p3 <= 
        ap_const_lv32_1E when (tmp_i4_5_fu_897_p2(0) = '1') else 
        recentABools_len_load_op_fu_903_p2;
    tmp_51_i_fu_868_p2 <= std_logic_vector(unsigned(recentABools_head_i) + unsigned(ap_const_lv32_1));
    tmp_52_i_fu_873_p2 <= "1" when (tmp_51_i_fu_868_p2 = ap_const_lv32_1E) else "0";
    
    p_i2_fu_941_p3_temp <= signed(p_i2_fu_941_p3);
    tmp_53_i_fu_949_p1 <= std_logic_vector(resize(p_i2_fu_941_p3_temp,64));

    tmp_5_fu_714_p2 <= std_logic_vector(unsigned(VbeatDelay) + unsigned(ap_const_lv32_1));
    tmp_6_fu_724_p2 <= std_logic_vector(unsigned(VbeatFallDelay) + unsigned(ap_const_lv32_1));
    tmp_7_fu_406_p3 <= 
        AstimDelay_load_op_fu_400_p2 when (tmp_fu_341_p2(0) = '1') else 
        ap_const_lv32_1;
    tmp_8_fu_420_p3 <= 
        VstimDelay_load_op_fu_414_p2 when (tmp_1_fu_351_p2(0) = '1') else 
        ap_const_lv32_1;
    tmp_fu_341_p2 <= "1" when (A_stim_reset = ap_const_lv16_0) else "0";
    tmp_i1_fu_637_p2 <= "1" when (recentVBools_len = ap_const_lv32_B) else "0";
    
    recentVBools_head_i_temp <= signed(recentVBools_head_i);
    tmp_i2_fu_603_p1 <= std_logic_vector(resize(recentVBools_head_i_temp,64));

    tmp_i3_fu_802_p2 <= "1" when (tmp_36_i_reg_1233 = ap_const_lv32_14) else "0";
    tmp_i4_5_fu_897_p2 <= "1" when (recentABools_len = ap_const_lv32_1E) else "0";
    
    p_tmp_i_reg_1221_temp <= signed(p_tmp_i_reg_1221);
    tmp_i4_fu_807_p1 <= std_logic_vector(resize(p_tmp_i_reg_1221_temp,64));

    
    recentABools_head_i_temp <= signed(recentABools_head_i);
    tmp_i5_fu_863_p1 <= std_logic_vector(resize(recentABools_head_i_temp,64));

    tmp_i9_fu_562_p2 <= "1" when (tmp_36_i_fu_542_p3 = ap_const_lv32_0) else "0";
    
    recentdatapoints_head_i_temp <= signed(recentdatapoints_head_i);
    tmp_i_4_fu_395_p1 <= std_logic_vector(resize(recentdatapoints_head_i_temp,64));

    tmp_i_fu_503_p2 <= "1" when (recentdatapoints_len = ap_const_lv32_14) else "0";
    tmp_s_fu_593_p2 <= "1" when (signed(grp_fu_583_p2) > signed(vthresh)) else "0";
    val_assign_1_fu_734_p1 <= std_logic_vector(resize(unsigned(tmp_s_reg_1253),32));
    val_assign_2_fu_964_p1 <= std_logic_vector(resize(unsigned(tmp_11_reg_1355),32));
end behav;
