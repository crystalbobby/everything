// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "singleDecision.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic singleDecision::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic singleDecision::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> singleDecision::ap_ST_st1_fsm_0 = "00000";
const sc_lv<5> singleDecision::ap_ST_st2_fsm_1 = "1";
const sc_lv<5> singleDecision::ap_ST_st3_fsm_2 = "10";
const sc_lv<5> singleDecision::ap_ST_st4_fsm_3 = "11";
const sc_lv<5> singleDecision::ap_ST_st5_fsm_4 = "100";
const sc_lv<5> singleDecision::ap_ST_st6_fsm_5 = "101";
const sc_lv<5> singleDecision::ap_ST_st7_fsm_6 = "110";
const sc_lv<5> singleDecision::ap_ST_st8_fsm_7 = "111";
const sc_lv<5> singleDecision::ap_ST_st9_fsm_8 = "1000";
const sc_lv<5> singleDecision::ap_ST_st10_fsm_9 = "1001";
const sc_lv<5> singleDecision::ap_ST_st11_fsm_10 = "1010";
const sc_lv<5> singleDecision::ap_ST_st12_fsm_11 = "1011";
const sc_lv<5> singleDecision::ap_ST_st13_fsm_12 = "1100";
const sc_lv<5> singleDecision::ap_ST_st14_fsm_13 = "1101";
const sc_lv<5> singleDecision::ap_ST_st15_fsm_14 = "1110";
const sc_lv<5> singleDecision::ap_ST_st16_fsm_15 = "1111";
const sc_lv<5> singleDecision::ap_ST_st17_fsm_16 = "10000";
const sc_lv<5> singleDecision::ap_ST_st18_fsm_17 = "10001";
const sc_lv<5> singleDecision::ap_ST_st19_fsm_18 = "10010";
const sc_lv<32> singleDecision::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> singleDecision::ap_const_lv32_1 = "1";
const sc_lv<32> singleDecision::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<1> singleDecision::ap_const_lv1_0 = "0";
const sc_lv<1> singleDecision::ap_const_lv1_1 = "1";
const sc_lv<16> singleDecision::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> singleDecision::ap_const_lv32_14 = "10100";
const sc_lv<32> singleDecision::ap_const_lv32_1F = "11111";
const sc_lv<32> singleDecision::ap_const_lv32_13 = "10011";
const sc_lv<32> singleDecision::ap_const_lv32_B = "1011";
const sc_lv<32> singleDecision::ap_const_lv32_A = "1010";
const sc_lv<32> singleDecision::ap_const_lv32_5 = "101";
const sc_lv<32> singleDecision::ap_const_lv32_1E = "11110";
const sc_lv<32> singleDecision::ap_const_lv32_1D = "11101";
const sc_lv<32> singleDecision::ap_const_lv32_4 = "100";
const sc_lv<28> singleDecision::ap_const_lv28_0 = "0000000000000000000000000000";
const sc_lv<6> singleDecision::ap_const_lv6_0 = "000000";
const sc_lv<6> singleDecision::ap_const_lv6_21 = "100001";
const sc_lv<6> singleDecision::ap_const_lv6_36 = "110110";
const sc_lv<32> singleDecision::ap_const_lv32_3E8 = "1111101000";
const sc_lv<32> singleDecision::ap_const_lv32_384 = "1110000100";

singleDecision::singleDecision(sc_module_name name) : sc_module(name), mVcdFile(0) {
    recentdatapoints_data_U = new singleDecision_recentdatapoints_data("recentdatapoints_data_U");
    recentdatapoints_data_U->clk(ap_clk);
    recentdatapoints_data_U->reset(ap_rst);
    recentdatapoints_data_U->address0(recentdatapoints_data_address0);
    recentdatapoints_data_U->ce0(recentdatapoints_data_ce0);
    recentdatapoints_data_U->we0(recentdatapoints_data_we0);
    recentdatapoints_data_U->d0(recentdatapoints_data_d0);
    recentdatapoints_data_U->q0(recentdatapoints_data_q0);
    recentVBools_data_U = new singleDecision_recentVBools_data("recentVBools_data_U");
    recentVBools_data_U->clk(ap_clk);
    recentVBools_data_U->reset(ap_rst);
    recentVBools_data_U->address0(recentVBools_data_address0);
    recentVBools_data_U->ce0(recentVBools_data_ce0);
    recentVBools_data_U->we0(recentVBools_data_we0);
    recentVBools_data_U->d0(recentVBools_data_d0);
    recentVBools_data_U->q0(recentVBools_data_q0);
    recentABools_data_U = new singleDecision_recentABools_data("recentABools_data_U");
    recentABools_data_U->clk(ap_clk);
    recentABools_data_U->reset(ap_rst);
    recentABools_data_U->address0(recentABools_data_address0);
    recentABools_data_U->ce0(recentABools_data_ce0);
    recentABools_data_U->we0(recentABools_data_we0);
    recentABools_data_U->d0(recentABools_data_d0);
    recentABools_data_U->q0(recentABools_data_q0);
    singleDecision_mul_32s_16s_32_3_U1 = new singleDecision_mul_32s_16s_32_3<1,3,32,16,32>("singleDecision_mul_32s_16s_32_3_U1");
    singleDecision_mul_32s_16s_32_3_U1->clk(ap_clk);
    singleDecision_mul_32s_16s_32_3_U1->reset(ap_rst);
    singleDecision_mul_32s_16s_32_3_U1->din0(grp_fu_583_p0);
    singleDecision_mul_32s_16s_32_3_U1->din1(grp_fu_583_p1);
    singleDecision_mul_32s_16s_32_3_U1->ce(grp_fu_583_ce);
    singleDecision_mul_32s_16s_32_3_U1->dout(grp_fu_583_p2);
    singleDecision_mul_32s_16s_32_3_U2 = new singleDecision_mul_32s_16s_32_3<2,3,32,16,32>("singleDecision_mul_32s_16s_32_3_U2");
    singleDecision_mul_32s_16s_32_3_U2->clk(ap_clk);
    singleDecision_mul_32s_16s_32_3_U2->reset(ap_rst);
    singleDecision_mul_32s_16s_32_3_U2->din0(grp_fu_843_p0);
    singleDecision_mul_32s_16s_32_3_U2->din1(grp_fu_843_p1);
    singleDecision_mul_32s_16s_32_3_U2->ce(grp_fu_843_ce);
    singleDecision_mul_32s_16s_32_3_U2->dout(grp_fu_843_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AstimDelay_load_op_fu_400_p2);
    sensitive << ( AstimDelay );

    SC_METHOD(thread_VstimDelay_load_op_fu_414_p2);
    sensitive << ( VstimDelay );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_209);
    sensitive << ( last_sample_is_V_load_load_fu_786_p1 );
    sensitive << ( tmp_3_fu_780_p2 );

    SC_METHOD(thread_ap_sig_bdd_214);
    sensitive << ( last_sample_is_V_load_load_fu_786_p1 );
    sensitive << ( tmp_3_fu_780_p2 );

    SC_METHOD(thread_ap_sig_bdd_234);
    sensitive << ( last_sample_is_A_load_load_fu_1026_p1 );
    sensitive << ( or_cond2_fu_1030_p2 );

    SC_METHOD(thread_ap_sig_bdd_242);
    sensitive << ( last_sample_is_A_load_load_fu_1026_p1 );
    sensitive << ( or_cond2_fu_1030_p2 );

    SC_METHOD(thread_datapointA_fu_811_p3);
    sensitive << ( recentdatapoints_data_q0 );
    sensitive << ( tmp_i3_reg_1325 );

    SC_METHOD(thread_datapointV_fu_568_p3);
    sensitive << ( recentdatapoints_data_q0 );
    sensitive << ( tmp_i9_fu_562_p2 );

    SC_METHOD(thread_extLd1_fu_737_p1);
    sensitive << ( recentVBools_data_load_reg_1269 );

    SC_METHOD(thread_extLd2_fu_967_p1);
    sensitive << ( recentABools_data_load_reg_1371 );

    SC_METHOD(thread_grp_fu_583_ce);

    SC_METHOD(thread_grp_fu_583_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( vflip );

    SC_METHOD(thread_grp_fu_583_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( datapointV_reg_1238 );

    SC_METHOD(thread_grp_fu_843_ce);

    SC_METHOD(thread_grp_fu_843_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( aflip );

    SC_METHOD(thread_grp_fu_843_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( datapointA_reg_1335 );

    SC_METHOD(thread_i_1_fu_478_p2);
    sensitive << ( p_tmp_i_reg_1221 );

    SC_METHOD(thread_i_2_fu_663_p2);
    sensitive << ( p_tmp_i1_reg_1274 );

    SC_METHOD(thread_i_3_fu_676_p2);
    sensitive << ( p_tmp_i1_reg_1274 );

    SC_METHOD(thread_i_4_fu_923_p2);
    sensitive << ( p_tmp_i2_reg_1376 );

    SC_METHOD(thread_i_5_fu_936_p2);
    sensitive << ( p_tmp_i2_reg_1376 );

    SC_METHOD(thread_i_fu_465_p2);
    sensitive << ( p_tmp_i_reg_1221 );

    SC_METHOD(thread_icmp_fu_1020_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_27_fu_1010_p4 );

    SC_METHOD(thread_last_sample_is_A_load_load_fu_1026_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( last_sample_is_A );

    SC_METHOD(thread_last_sample_is_V_load_load_fu_786_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( last_sample_is_V );

    SC_METHOD(thread_not_tmp_i2_fu_694_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_43_i_fu_649_p3 );

    SC_METHOD(thread_not_tmp_i5_fu_954_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_50_i_fu_909_p3 );

    SC_METHOD(thread_or_cond1_fu_1151_p2);
    sensitive << ( tmp1_fu_1146_p2 );
    sensitive << ( tmp_21_fu_1134_p2 );

    SC_METHOD(thread_or_cond2_fu_1030_p2);
    sensitive << ( tmp_13_reg_1340 );
    sensitive << ( icmp_reg_1397 );

    SC_METHOD(thread_or_cond4_fu_1092_p2);
    sensitive << ( tmp_17_fu_1080_p2 );
    sensitive << ( tmp_18_fu_1086_p2 );

    SC_METHOD(thread_or_cond8_fu_1129_p2);
    sensitive << ( tmp_20_reg_1411 );
    sensitive << ( tmp_19_fu_1123_p2 );

    SC_METHOD(thread_or_cond_fu_1068_p2);
    sensitive << ( tmp_15_fu_1056_p2 );
    sensitive << ( tmp_16_fu_1062_p2 );

    SC_METHOD(thread_out_r);
    sensitive << ( ap_CS_fsm );
    sensitive << ( storemerge1_cast_fu_1118_p0 );

    SC_METHOD(thread_out_r_ap_vld);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_p_0_i2_cast_fu_1000_p1);
    sensitive << ( p_0_i2_fu_995_p2 );

    SC_METHOD(thread_p_0_i2_fu_995_p2);
    sensitive << ( recentABools_data_q0 );
    sensitive << ( not_tmp_i5_reg_1392 );

    SC_METHOD(thread_p_0_i_cast_fu_770_p1);
    sensitive << ( p_0_i_fu_765_p2 );

    SC_METHOD(thread_p_0_i_fu_765_p2);
    sensitive << ( recentVBools_data_q0 );
    sensitive << ( not_tmp_i2_reg_1290 );

    SC_METHOD(thread_p_i1_fu_681_p3);
    sensitive << ( i_2_fu_663_p2 );
    sensitive << ( tmp_25_fu_668_p3 );
    sensitive << ( i_3_fu_676_p2 );

    SC_METHOD(thread_p_i2_fu_941_p3);
    sensitive << ( i_4_fu_923_p2 );
    sensitive << ( tmp_26_fu_928_p3 );
    sensitive << ( i_5_fu_936_p2 );

    SC_METHOD(thread_p_i_fu_483_p3);
    sensitive << ( i_fu_465_p2 );
    sensitive << ( tmp_12_fu_470_p3 );
    sensitive << ( i_1_fu_478_p2 );

    SC_METHOD(thread_p_s_fu_1157_p3);
    sensitive << ( or_cond1_fu_1151_p2 );

    SC_METHOD(thread_p_tmp_i1_fu_619_p3);
    sensitive << ( tmp_44_i_fu_608_p2 );
    sensitive << ( tmp_45_i_fu_613_p2 );

    SC_METHOD(thread_p_tmp_i2_fu_879_p3);
    sensitive << ( tmp_51_i_fu_868_p2 );
    sensitive << ( tmp_52_i_fu_873_p2 );

    SC_METHOD(thread_p_tmp_i_fu_451_p3);
    sensitive << ( tmp_37_i_fu_440_p2 );
    sensitive << ( tmp_38_i_fu_445_p2 );

    SC_METHOD(thread_recentABools_data_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( recentABools_data_addr_reg_1366 );
    sensitive << ( tmp_i5_fu_863_p1 );
    sensitive << ( tmp_53_i_fu_949_p1 );

    SC_METHOD(thread_recentABools_data_ce0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_recentABools_data_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_11_reg_1355 );

    SC_METHOD(thread_recentABools_data_we0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_recentABools_len_load_op_fu_903_p2);
    sensitive << ( recentABools_len );

    SC_METHOD(thread_recentABools_sum_loc_i_fu_976_p3);
    sensitive << ( recentABools_sum );
    sensitive << ( tmp_i4_5_reg_1382 );
    sensitive << ( tmp_47_i_fu_970_p2 );

    SC_METHOD(thread_recentVBools_data_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( recentVBools_data_addr_reg_1264 );
    sensitive << ( tmp_i2_fu_603_p1 );
    sensitive << ( tmp_46_i_fu_689_p1 );

    SC_METHOD(thread_recentVBools_data_ce0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_recentVBools_data_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_reg_1253 );

    SC_METHOD(thread_recentVBools_data_we0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_recentVBools_len_load_op_fu_643_p2);
    sensitive << ( recentVBools_len );

    SC_METHOD(thread_recentVBools_sum_loc_i_fu_746_p3);
    sensitive << ( recentVBools_sum );
    sensitive << ( tmp_i1_reg_1280 );
    sensitive << ( tmp_40_i_fu_740_p2 );

    SC_METHOD(thread_recentdatapoints_data_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( recentdatapoints_data_addr_reg_1196 );
    sensitive << ( tmp_i_4_fu_395_p1 );
    sensitive << ( tmp_39_i_fu_491_p1 );
    sensitive << ( tmp_i4_fu_807_p1 );

    SC_METHOD(thread_recentdatapoints_data_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_recentdatapoints_data_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( datapoint );

    SC_METHOD(thread_recentdatapoints_data_we0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_recentdatapoints_len_load_op_fu_536_p2);
    sensitive << ( recentdatapoints_len );

    SC_METHOD(thread_recentdatapoints_sum_loc_i_fu_522_p3);
    sensitive << ( recentdatapoints_sum );
    sensitive << ( tmp_i_fu_503_p2 );
    sensitive << ( tmp_33_i_fu_516_p2 );

    SC_METHOD(thread_stim);
    sensitive << ( ap_CS_fsm );
    sensitive << ( stim_new_1_cast_fu_1183_p0 );

    SC_METHOD(thread_stim_ap_vld);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_stim_new_1_cast_fu_1183_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( stim_new_1_fu_1171_p3 );

    SC_METHOD(thread_stim_new_1_fu_1171_p3);
    sensitive << ( tmp_24_fu_1165_p2 );
    sensitive << ( p_s_fu_1157_p3 );

    SC_METHOD(thread_storemerge1_cast_fu_1118_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( storemerge1_fu_1106_p3 );

    SC_METHOD(thread_storemerge1_fu_1106_p3);
    sensitive << ( or_cond_fu_1068_p2 );
    sensitive << ( storemerge_fu_1098_p3 );

    SC_METHOD(thread_storemerge_fu_1098_p3);
    sensitive << ( or_cond4_fu_1092_p2 );

    SC_METHOD(thread_sum_1_fu_774_p2);
    sensitive << ( recentVBools_sum );
    sensitive << ( p_0_i_cast_fu_770_p1 );

    SC_METHOD(thread_sum_3_fu_1004_p2);
    sensitive << ( recentABools_sum );
    sensitive << ( p_0_i2_cast_fu_1000_p1 );

    SC_METHOD(thread_tmp1_fu_1146_p2);
    sensitive << ( tmp_23_reg_1416 );
    sensitive << ( tmp_22_fu_1140_p2 );

    SC_METHOD(thread_tmp_11_fu_853_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( athresh );
    sensitive << ( grp_fu_843_p2 );

    SC_METHOD(thread_tmp_12_fu_470_p3);
    sensitive << ( i_fu_465_p2 );

    SC_METHOD(thread_tmp_13_fu_830_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( VbeatDelay_new_1_reg_259 );
    sensitive << ( VbeatFallDelay_new_1_reg_275 );

    SC_METHOD(thread_tmp_15_fu_1056_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( VbeatDelay_new_1_reg_259 );

    SC_METHOD(thread_tmp_16_fu_1062_p2);
    sensitive << ( last_sample_is_V_loc_2_reg_290 );

    SC_METHOD(thread_tmp_17_fu_1080_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( AbeatDelay_new_reg_308 );

    SC_METHOD(thread_tmp_18_fu_1086_p2);
    sensitive << ( tmp_14_reg_323 );

    SC_METHOD(thread_tmp_19_fu_1123_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( AbeatDelay_new_reg_308 );

    SC_METHOD(thread_tmp_1_fu_351_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( V_stim_reset );

    SC_METHOD(thread_tmp_20_fu_1046_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_7_reg_1201 );

    SC_METHOD(thread_tmp_21_fu_1134_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( VbeatDelay_new_1_reg_259 );
    sensitive << ( AbeatDelay_new_reg_308 );

    SC_METHOD(thread_tmp_22_fu_1140_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( AbeatDelay_new_reg_308 );

    SC_METHOD(thread_tmp_23_fu_1051_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_8_reg_1206 );

    SC_METHOD(thread_tmp_24_fu_1165_p2);
    sensitive << ( or_cond1_fu_1151_p2 );
    sensitive << ( or_cond8_fu_1129_p2 );

    SC_METHOD(thread_tmp_25_fu_668_p3);
    sensitive << ( i_2_fu_663_p2 );

    SC_METHOD(thread_tmp_26_fu_928_p3);
    sensitive << ( i_4_fu_923_p2 );

    SC_METHOD(thread_tmp_27_fu_1010_p4);
    sensitive << ( sum_3_fu_1004_p2 );

    SC_METHOD(thread_tmp_2_fu_361_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( set_thresh );

    SC_METHOD(thread_tmp_33_i_fu_516_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( recentdatapoints_data_load_reg_1216 );

    SC_METHOD(thread_tmp_33_i_fu_516_p2);
    sensitive << ( recentdatapoints_sum );
    sensitive << ( tmp_33_i_fu_516_p1 );

    SC_METHOD(thread_tmp_35_i_fu_530_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( datapoint );

    SC_METHOD(thread_tmp_35_i_fu_530_p2);
    sensitive << ( recentdatapoints_sum_loc_i_fu_522_p3 );
    sensitive << ( tmp_35_i_fu_530_p1 );

    SC_METHOD(thread_tmp_36_i_fu_542_p3);
    sensitive << ( tmp_i_fu_503_p2 );
    sensitive << ( recentdatapoints_len_load_op_fu_536_p2 );

    SC_METHOD(thread_tmp_37_i_fu_440_p2);
    sensitive << ( recentdatapoints_head_i );

    SC_METHOD(thread_tmp_38_i_fu_445_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_37_i_fu_440_p2 );

    SC_METHOD(thread_tmp_39_i_fu_491_p1);
    sensitive << ( p_i_fu_483_p3 );

    SC_METHOD(thread_tmp_3_fu_780_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( sum_1_fu_774_p2 );

    SC_METHOD(thread_tmp_40_i_fu_740_p2);
    sensitive << ( recentVBools_sum );
    sensitive << ( extLd1_fu_737_p1 );

    SC_METHOD(thread_tmp_42_i_fu_753_p2);
    sensitive << ( recentVBools_sum_loc_i_fu_746_p3 );
    sensitive << ( val_assign_1_fu_734_p1 );

    SC_METHOD(thread_tmp_43_i_fu_649_p3);
    sensitive << ( tmp_i1_fu_637_p2 );
    sensitive << ( recentVBools_len_load_op_fu_643_p2 );

    SC_METHOD(thread_tmp_44_i_fu_608_p2);
    sensitive << ( recentVBools_head_i );

    SC_METHOD(thread_tmp_45_i_fu_613_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_44_i_fu_608_p2 );

    SC_METHOD(thread_tmp_46_i_fu_689_p1);
    sensitive << ( p_i1_fu_681_p3 );

    SC_METHOD(thread_tmp_47_i_fu_970_p2);
    sensitive << ( recentABools_sum );
    sensitive << ( extLd2_fu_967_p1 );

    SC_METHOD(thread_tmp_49_i_fu_983_p2);
    sensitive << ( recentABools_sum_loc_i_fu_976_p3 );
    sensitive << ( val_assign_2_fu_964_p1 );

    SC_METHOD(thread_tmp_4_fu_704_p2);
    sensitive << ( AbeatDelay );

    SC_METHOD(thread_tmp_50_i_fu_909_p3);
    sensitive << ( tmp_i4_5_fu_897_p2 );
    sensitive << ( recentABools_len_load_op_fu_903_p2 );

    SC_METHOD(thread_tmp_51_i_fu_868_p2);
    sensitive << ( recentABools_head_i );

    SC_METHOD(thread_tmp_52_i_fu_873_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_51_i_fu_868_p2 );

    SC_METHOD(thread_tmp_53_i_fu_949_p1);
    sensitive << ( p_i2_fu_941_p3 );

    SC_METHOD(thread_tmp_5_fu_714_p2);
    sensitive << ( VbeatDelay );

    SC_METHOD(thread_tmp_6_fu_724_p2);
    sensitive << ( VbeatFallDelay );

    SC_METHOD(thread_tmp_7_fu_406_p3);
    sensitive << ( tmp_fu_341_p2 );
    sensitive << ( AstimDelay_load_op_fu_400_p2 );

    SC_METHOD(thread_tmp_8_fu_420_p3);
    sensitive << ( tmp_1_fu_351_p2 );
    sensitive << ( VstimDelay_load_op_fu_414_p2 );

    SC_METHOD(thread_tmp_fu_341_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( A_stim_reset );

    SC_METHOD(thread_tmp_i1_fu_637_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( recentVBools_len );

    SC_METHOD(thread_tmp_i2_fu_603_p1);
    sensitive << ( recentVBools_head_i );

    SC_METHOD(thread_tmp_i3_fu_802_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_36_i_reg_1233 );

    SC_METHOD(thread_tmp_i4_5_fu_897_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( recentABools_len );

    SC_METHOD(thread_tmp_i4_fu_807_p1);
    sensitive << ( p_tmp_i_reg_1221 );

    SC_METHOD(thread_tmp_i5_fu_863_p1);
    sensitive << ( recentABools_head_i );

    SC_METHOD(thread_tmp_i9_fu_562_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_36_i_fu_542_p3 );

    SC_METHOD(thread_tmp_i_4_fu_395_p1);
    sensitive << ( recentdatapoints_head_i );

    SC_METHOD(thread_tmp_i_fu_503_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( recentdatapoints_len );

    SC_METHOD(thread_tmp_s_fu_593_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( vthresh );
    sensitive << ( grp_fu_583_p2 );

    SC_METHOD(thread_val_assign_1_fu_734_p1);
    sensitive << ( tmp_s_reg_1253 );

    SC_METHOD(thread_val_assign_2_fu_964_p1);
    sensitive << ( tmp_11_reg_1355 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000";
    AstimDelay = "00000000000000000000000000000000";
    VstimDelay = "00000000000000000000000000000000";
    vthresh = "00000000000000000000000010100001";
    athresh = "00000000000000000000000001001000";
    aflip = "00000000000000000000000000000001";
    vflip = "11111111111111111111111111111111";
    recentdatapoints_len = "00000000000000000000000000000000";
    recentdatapoints_head_i = "00000000000000000000000000000000";
    recentdatapoints_sum = "00000000000000000000000000000000";
    AbeatDelay = "00000000000000000000000000000000";
    VbeatDelay = "00000000000000000000000000000000";
    VbeatFallDelay = "00000000000000000000000000000000";
    recentVBools_sum = "00000000000000000000000000000000";
    recentVBools_len = "00000000000000000000000000000000";
    recentVBools_head_i = "00000000000000000000000000000000";
    last_sample_is_V = "0";
    recentABools_sum = "00000000000000000000000000000000";
    recentABools_len = "00000000000000000000000000000000";
    recentABools_head_i = "00000000000000000000000000000000";
    last_sample_is_A = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "singleDecision_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_stim_reset, "(port)A_stim_reset");
    sc_trace(mVcdFile, V_stim_reset, "(port)V_stim_reset");
    sc_trace(mVcdFile, set_thresh, "(port)set_thresh");
    sc_trace(mVcdFile, v_thresh, "(port)v_thresh");
    sc_trace(mVcdFile, a_thresh, "(port)a_thresh");
    sc_trace(mVcdFile, a_flip, "(port)a_flip");
    sc_trace(mVcdFile, v_flip, "(port)v_flip");
    sc_trace(mVcdFile, datapoint, "(port)datapoint");
    sc_trace(mVcdFile, out_r, "(port)out_r");
    sc_trace(mVcdFile, out_r_ap_vld, "(port)out_r_ap_vld");
    sc_trace(mVcdFile, stim, "(port)stim");
    sc_trace(mVcdFile, stim_ap_vld, "(port)stim_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, AstimDelay, "AstimDelay");
    sc_trace(mVcdFile, VstimDelay, "VstimDelay");
    sc_trace(mVcdFile, vthresh, "vthresh");
    sc_trace(mVcdFile, athresh, "athresh");
    sc_trace(mVcdFile, aflip, "aflip");
    sc_trace(mVcdFile, vflip, "vflip");
    sc_trace(mVcdFile, recentdatapoints_len, "recentdatapoints_len");
    sc_trace(mVcdFile, recentdatapoints_head_i, "recentdatapoints_head_i");
    sc_trace(mVcdFile, recentdatapoints_sum, "recentdatapoints_sum");
    sc_trace(mVcdFile, recentdatapoints_data_address0, "recentdatapoints_data_address0");
    sc_trace(mVcdFile, recentdatapoints_data_ce0, "recentdatapoints_data_ce0");
    sc_trace(mVcdFile, recentdatapoints_data_we0, "recentdatapoints_data_we0");
    sc_trace(mVcdFile, recentdatapoints_data_d0, "recentdatapoints_data_d0");
    sc_trace(mVcdFile, recentdatapoints_data_q0, "recentdatapoints_data_q0");
    sc_trace(mVcdFile, AbeatDelay, "AbeatDelay");
    sc_trace(mVcdFile, VbeatDelay, "VbeatDelay");
    sc_trace(mVcdFile, VbeatFallDelay, "VbeatFallDelay");
    sc_trace(mVcdFile, recentVBools_sum, "recentVBools_sum");
    sc_trace(mVcdFile, recentVBools_len, "recentVBools_len");
    sc_trace(mVcdFile, recentVBools_head_i, "recentVBools_head_i");
    sc_trace(mVcdFile, recentVBools_data_address0, "recentVBools_data_address0");
    sc_trace(mVcdFile, recentVBools_data_ce0, "recentVBools_data_ce0");
    sc_trace(mVcdFile, recentVBools_data_we0, "recentVBools_data_we0");
    sc_trace(mVcdFile, recentVBools_data_d0, "recentVBools_data_d0");
    sc_trace(mVcdFile, recentVBools_data_q0, "recentVBools_data_q0");
    sc_trace(mVcdFile, last_sample_is_V, "last_sample_is_V");
    sc_trace(mVcdFile, recentABools_sum, "recentABools_sum");
    sc_trace(mVcdFile, recentABools_len, "recentABools_len");
    sc_trace(mVcdFile, recentABools_head_i, "recentABools_head_i");
    sc_trace(mVcdFile, recentABools_data_address0, "recentABools_data_address0");
    sc_trace(mVcdFile, recentABools_data_ce0, "recentABools_data_ce0");
    sc_trace(mVcdFile, recentABools_data_we0, "recentABools_data_we0");
    sc_trace(mVcdFile, recentABools_data_d0, "recentABools_data_d0");
    sc_trace(mVcdFile, recentABools_data_q0, "recentABools_data_q0");
    sc_trace(mVcdFile, last_sample_is_A, "last_sample_is_A");
    sc_trace(mVcdFile, recentdatapoints_data_addr_reg_1196, "recentdatapoints_data_addr_reg_1196");
    sc_trace(mVcdFile, tmp_7_fu_406_p3, "tmp_7_fu_406_p3");
    sc_trace(mVcdFile, tmp_7_reg_1201, "tmp_7_reg_1201");
    sc_trace(mVcdFile, tmp_8_fu_420_p3, "tmp_8_fu_420_p3");
    sc_trace(mVcdFile, tmp_8_reg_1206, "tmp_8_reg_1206");
    sc_trace(mVcdFile, recentdatapoints_data_load_reg_1216, "recentdatapoints_data_load_reg_1216");
    sc_trace(mVcdFile, p_tmp_i_fu_451_p3, "p_tmp_i_fu_451_p3");
    sc_trace(mVcdFile, p_tmp_i_reg_1221, "p_tmp_i_reg_1221");
    sc_trace(mVcdFile, tmp_36_i_fu_542_p3, "tmp_36_i_fu_542_p3");
    sc_trace(mVcdFile, tmp_36_i_reg_1233, "tmp_36_i_reg_1233");
    sc_trace(mVcdFile, datapointV_fu_568_p3, "datapointV_fu_568_p3");
    sc_trace(mVcdFile, datapointV_reg_1238, "datapointV_reg_1238");
    sc_trace(mVcdFile, tmp_s_fu_593_p2, "tmp_s_fu_593_p2");
    sc_trace(mVcdFile, tmp_s_reg_1253, "tmp_s_reg_1253");
    sc_trace(mVcdFile, recentVBools_data_addr_reg_1264, "recentVBools_data_addr_reg_1264");
    sc_trace(mVcdFile, recentVBools_data_load_reg_1269, "recentVBools_data_load_reg_1269");
    sc_trace(mVcdFile, p_tmp_i1_fu_619_p3, "p_tmp_i1_fu_619_p3");
    sc_trace(mVcdFile, p_tmp_i1_reg_1274, "p_tmp_i1_reg_1274");
    sc_trace(mVcdFile, tmp_i1_fu_637_p2, "tmp_i1_fu_637_p2");
    sc_trace(mVcdFile, tmp_i1_reg_1280, "tmp_i1_reg_1280");
    sc_trace(mVcdFile, not_tmp_i2_fu_694_p2, "not_tmp_i2_fu_694_p2");
    sc_trace(mVcdFile, not_tmp_i2_reg_1290, "not_tmp_i2_reg_1290");
    sc_trace(mVcdFile, tmp_4_fu_704_p2, "tmp_4_fu_704_p2");
    sc_trace(mVcdFile, tmp_4_reg_1295, "tmp_4_reg_1295");
    sc_trace(mVcdFile, tmp_5_fu_714_p2, "tmp_5_fu_714_p2");
    sc_trace(mVcdFile, tmp_6_fu_724_p2, "tmp_6_fu_724_p2");
    sc_trace(mVcdFile, last_sample_is_V_load_load_fu_786_p1, "last_sample_is_V_load_load_fu_786_p1");
    sc_trace(mVcdFile, tmp_i3_fu_802_p2, "tmp_i3_fu_802_p2");
    sc_trace(mVcdFile, tmp_i3_reg_1325, "tmp_i3_reg_1325");
    sc_trace(mVcdFile, datapointA_fu_811_p3, "datapointA_fu_811_p3");
    sc_trace(mVcdFile, datapointA_reg_1335, "datapointA_reg_1335");
    sc_trace(mVcdFile, tmp_13_fu_830_p2, "tmp_13_fu_830_p2");
    sc_trace(mVcdFile, tmp_13_reg_1340, "tmp_13_reg_1340");
    sc_trace(mVcdFile, tmp_11_fu_853_p2, "tmp_11_fu_853_p2");
    sc_trace(mVcdFile, tmp_11_reg_1355, "tmp_11_reg_1355");
    sc_trace(mVcdFile, recentABools_data_addr_reg_1366, "recentABools_data_addr_reg_1366");
    sc_trace(mVcdFile, recentABools_data_load_reg_1371, "recentABools_data_load_reg_1371");
    sc_trace(mVcdFile, p_tmp_i2_fu_879_p3, "p_tmp_i2_fu_879_p3");
    sc_trace(mVcdFile, p_tmp_i2_reg_1376, "p_tmp_i2_reg_1376");
    sc_trace(mVcdFile, tmp_i4_5_fu_897_p2, "tmp_i4_5_fu_897_p2");
    sc_trace(mVcdFile, tmp_i4_5_reg_1382, "tmp_i4_5_reg_1382");
    sc_trace(mVcdFile, not_tmp_i5_fu_954_p2, "not_tmp_i5_fu_954_p2");
    sc_trace(mVcdFile, not_tmp_i5_reg_1392, "not_tmp_i5_reg_1392");
    sc_trace(mVcdFile, icmp_fu_1020_p2, "icmp_fu_1020_p2");
    sc_trace(mVcdFile, icmp_reg_1397, "icmp_reg_1397");
    sc_trace(mVcdFile, last_sample_is_A_load_load_fu_1026_p1, "last_sample_is_A_load_load_fu_1026_p1");
    sc_trace(mVcdFile, tmp_20_fu_1046_p2, "tmp_20_fu_1046_p2");
    sc_trace(mVcdFile, tmp_20_reg_1411, "tmp_20_reg_1411");
    sc_trace(mVcdFile, tmp_23_fu_1051_p2, "tmp_23_fu_1051_p2");
    sc_trace(mVcdFile, tmp_23_reg_1416, "tmp_23_reg_1416");
    sc_trace(mVcdFile, VbeatDelay_new_1_reg_259, "VbeatDelay_new_1_reg_259");
    sc_trace(mVcdFile, tmp_3_fu_780_p2, "tmp_3_fu_780_p2");
    sc_trace(mVcdFile, VbeatFallDelay_new_1_reg_275, "VbeatFallDelay_new_1_reg_275");
    sc_trace(mVcdFile, last_sample_is_V_loc_2_reg_290, "last_sample_is_V_loc_2_reg_290");
    sc_trace(mVcdFile, AbeatDelay_new_reg_308, "AbeatDelay_new_reg_308");
    sc_trace(mVcdFile, or_cond2_fu_1030_p2, "or_cond2_fu_1030_p2");
    sc_trace(mVcdFile, tmp_14_reg_323, "tmp_14_reg_323");
    sc_trace(mVcdFile, tmp_i_4_fu_395_p1, "tmp_i_4_fu_395_p1");
    sc_trace(mVcdFile, tmp_39_i_fu_491_p1, "tmp_39_i_fu_491_p1");
    sc_trace(mVcdFile, tmp_i2_fu_603_p1, "tmp_i2_fu_603_p1");
    sc_trace(mVcdFile, tmp_46_i_fu_689_p1, "tmp_46_i_fu_689_p1");
    sc_trace(mVcdFile, tmp_i4_fu_807_p1, "tmp_i4_fu_807_p1");
    sc_trace(mVcdFile, tmp_i5_fu_863_p1, "tmp_i5_fu_863_p1");
    sc_trace(mVcdFile, tmp_53_i_fu_949_p1, "tmp_53_i_fu_949_p1");
    sc_trace(mVcdFile, tmp_2_fu_361_p2, "tmp_2_fu_361_p2");
    sc_trace(mVcdFile, tmp_35_i_fu_530_p2, "tmp_35_i_fu_530_p2");
    sc_trace(mVcdFile, tmp_42_i_fu_753_p2, "tmp_42_i_fu_753_p2");
    sc_trace(mVcdFile, tmp_43_i_fu_649_p3, "tmp_43_i_fu_649_p3");
    sc_trace(mVcdFile, tmp_49_i_fu_983_p2, "tmp_49_i_fu_983_p2");
    sc_trace(mVcdFile, tmp_50_i_fu_909_p3, "tmp_50_i_fu_909_p3");
    sc_trace(mVcdFile, tmp_fu_341_p2, "tmp_fu_341_p2");
    sc_trace(mVcdFile, AstimDelay_load_op_fu_400_p2, "AstimDelay_load_op_fu_400_p2");
    sc_trace(mVcdFile, tmp_1_fu_351_p2, "tmp_1_fu_351_p2");
    sc_trace(mVcdFile, VstimDelay_load_op_fu_414_p2, "VstimDelay_load_op_fu_414_p2");
    sc_trace(mVcdFile, tmp_37_i_fu_440_p2, "tmp_37_i_fu_440_p2");
    sc_trace(mVcdFile, tmp_38_i_fu_445_p2, "tmp_38_i_fu_445_p2");
    sc_trace(mVcdFile, i_fu_465_p2, "i_fu_465_p2");
    sc_trace(mVcdFile, tmp_12_fu_470_p3, "tmp_12_fu_470_p3");
    sc_trace(mVcdFile, i_1_fu_478_p2, "i_1_fu_478_p2");
    sc_trace(mVcdFile, p_i_fu_483_p3, "p_i_fu_483_p3");
    sc_trace(mVcdFile, tmp_33_i_fu_516_p1, "tmp_33_i_fu_516_p1");
    sc_trace(mVcdFile, tmp_i_fu_503_p2, "tmp_i_fu_503_p2");
    sc_trace(mVcdFile, tmp_33_i_fu_516_p2, "tmp_33_i_fu_516_p2");
    sc_trace(mVcdFile, recentdatapoints_sum_loc_i_fu_522_p3, "recentdatapoints_sum_loc_i_fu_522_p3");
    sc_trace(mVcdFile, tmp_35_i_fu_530_p1, "tmp_35_i_fu_530_p1");
    sc_trace(mVcdFile, recentdatapoints_len_load_op_fu_536_p2, "recentdatapoints_len_load_op_fu_536_p2");
    sc_trace(mVcdFile, tmp_i9_fu_562_p2, "tmp_i9_fu_562_p2");
    sc_trace(mVcdFile, grp_fu_583_p0, "grp_fu_583_p0");
    sc_trace(mVcdFile, grp_fu_583_p1, "grp_fu_583_p1");
    sc_trace(mVcdFile, grp_fu_583_p2, "grp_fu_583_p2");
    sc_trace(mVcdFile, tmp_44_i_fu_608_p2, "tmp_44_i_fu_608_p2");
    sc_trace(mVcdFile, tmp_45_i_fu_613_p2, "tmp_45_i_fu_613_p2");
    sc_trace(mVcdFile, recentVBools_len_load_op_fu_643_p2, "recentVBools_len_load_op_fu_643_p2");
    sc_trace(mVcdFile, i_2_fu_663_p2, "i_2_fu_663_p2");
    sc_trace(mVcdFile, tmp_25_fu_668_p3, "tmp_25_fu_668_p3");
    sc_trace(mVcdFile, i_3_fu_676_p2, "i_3_fu_676_p2");
    sc_trace(mVcdFile, p_i1_fu_681_p3, "p_i1_fu_681_p3");
    sc_trace(mVcdFile, extLd1_fu_737_p1, "extLd1_fu_737_p1");
    sc_trace(mVcdFile, tmp_40_i_fu_740_p2, "tmp_40_i_fu_740_p2");
    sc_trace(mVcdFile, recentVBools_sum_loc_i_fu_746_p3, "recentVBools_sum_loc_i_fu_746_p3");
    sc_trace(mVcdFile, val_assign_1_fu_734_p1, "val_assign_1_fu_734_p1");
    sc_trace(mVcdFile, p_0_i_fu_765_p2, "p_0_i_fu_765_p2");
    sc_trace(mVcdFile, p_0_i_cast_fu_770_p1, "p_0_i_cast_fu_770_p1");
    sc_trace(mVcdFile, sum_1_fu_774_p2, "sum_1_fu_774_p2");
    sc_trace(mVcdFile, grp_fu_843_p0, "grp_fu_843_p0");
    sc_trace(mVcdFile, grp_fu_843_p1, "grp_fu_843_p1");
    sc_trace(mVcdFile, grp_fu_843_p2, "grp_fu_843_p2");
    sc_trace(mVcdFile, tmp_51_i_fu_868_p2, "tmp_51_i_fu_868_p2");
    sc_trace(mVcdFile, tmp_52_i_fu_873_p2, "tmp_52_i_fu_873_p2");
    sc_trace(mVcdFile, recentABools_len_load_op_fu_903_p2, "recentABools_len_load_op_fu_903_p2");
    sc_trace(mVcdFile, i_4_fu_923_p2, "i_4_fu_923_p2");
    sc_trace(mVcdFile, tmp_26_fu_928_p3, "tmp_26_fu_928_p3");
    sc_trace(mVcdFile, i_5_fu_936_p2, "i_5_fu_936_p2");
    sc_trace(mVcdFile, p_i2_fu_941_p3, "p_i2_fu_941_p3");
    sc_trace(mVcdFile, extLd2_fu_967_p1, "extLd2_fu_967_p1");
    sc_trace(mVcdFile, tmp_47_i_fu_970_p2, "tmp_47_i_fu_970_p2");
    sc_trace(mVcdFile, recentABools_sum_loc_i_fu_976_p3, "recentABools_sum_loc_i_fu_976_p3");
    sc_trace(mVcdFile, val_assign_2_fu_964_p1, "val_assign_2_fu_964_p1");
    sc_trace(mVcdFile, p_0_i2_fu_995_p2, "p_0_i2_fu_995_p2");
    sc_trace(mVcdFile, p_0_i2_cast_fu_1000_p1, "p_0_i2_cast_fu_1000_p1");
    sc_trace(mVcdFile, sum_3_fu_1004_p2, "sum_3_fu_1004_p2");
    sc_trace(mVcdFile, tmp_27_fu_1010_p4, "tmp_27_fu_1010_p4");
    sc_trace(mVcdFile, tmp_15_fu_1056_p2, "tmp_15_fu_1056_p2");
    sc_trace(mVcdFile, tmp_16_fu_1062_p2, "tmp_16_fu_1062_p2");
    sc_trace(mVcdFile, tmp_17_fu_1080_p2, "tmp_17_fu_1080_p2");
    sc_trace(mVcdFile, tmp_18_fu_1086_p2, "tmp_18_fu_1086_p2");
    sc_trace(mVcdFile, or_cond4_fu_1092_p2, "or_cond4_fu_1092_p2");
    sc_trace(mVcdFile, or_cond_fu_1068_p2, "or_cond_fu_1068_p2");
    sc_trace(mVcdFile, storemerge_fu_1098_p3, "storemerge_fu_1098_p3");
    sc_trace(mVcdFile, storemerge1_fu_1106_p3, "storemerge1_fu_1106_p3");
    sc_trace(mVcdFile, storemerge1_cast_fu_1118_p0, "storemerge1_cast_fu_1118_p0");
    sc_trace(mVcdFile, tmp_19_fu_1123_p2, "tmp_19_fu_1123_p2");
    sc_trace(mVcdFile, tmp_22_fu_1140_p2, "tmp_22_fu_1140_p2");
    sc_trace(mVcdFile, tmp1_fu_1146_p2, "tmp1_fu_1146_p2");
    sc_trace(mVcdFile, tmp_21_fu_1134_p2, "tmp_21_fu_1134_p2");
    sc_trace(mVcdFile, or_cond1_fu_1151_p2, "or_cond1_fu_1151_p2");
    sc_trace(mVcdFile, or_cond8_fu_1129_p2, "or_cond8_fu_1129_p2");
    sc_trace(mVcdFile, tmp_24_fu_1165_p2, "tmp_24_fu_1165_p2");
    sc_trace(mVcdFile, p_s_fu_1157_p3, "p_s_fu_1157_p3");
    sc_trace(mVcdFile, stim_new_1_fu_1171_p3, "stim_new_1_fu_1171_p3");
    sc_trace(mVcdFile, stim_new_1_cast_fu_1183_p0, "stim_new_1_cast_fu_1183_p0");
    sc_trace(mVcdFile, grp_fu_583_ce, "grp_fu_583_ce");
    sc_trace(mVcdFile, grp_fu_843_ce, "grp_fu_843_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_bdd_242, "ap_sig_bdd_242");
    sc_trace(mVcdFile, ap_sig_bdd_234, "ap_sig_bdd_234");
    sc_trace(mVcdFile, ap_sig_bdd_214, "ap_sig_bdd_214");
    sc_trace(mVcdFile, ap_sig_bdd_209, "ap_sig_bdd_209");
#endif

    }
    mHdltvinHandle.open("singleDecision.hdltvin.dat");
    mHdltvoutHandle.open("singleDecision.hdltvout.dat");
}

singleDecision::~singleDecision() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete recentdatapoints_data_U;
    delete recentVBools_data_U;
    delete recentABools_data_U;
    delete singleDecision_mul_32s_16s_32_3_U1;
    delete singleDecision_mul_32s_16s_32_3_U2;
}

void singleDecision::thread_ap_clk_no_reset_() {
    if (((esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_fu_1030_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_A_load_load_fu_1026_p1.read())) || 
         (esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_fu_1030_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_A_load_load_fu_1026_p1.read())) || 
         (esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_fu_1030_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_A_load_load_fu_1026_p1.read())))) {
        AbeatDelay_new_reg_308 = tmp_4_reg_1295.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_fu_1030_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_A_load_load_fu_1026_p1.read()))) {
        AbeatDelay_new_reg_308 = ap_const_lv32_0;
    }
    if (((esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_780_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_V_load_load_fu_786_p1.read())) || 
         (esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_780_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_V_load_load_fu_786_p1.read())) || 
         (esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_780_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_V_load_load_fu_786_p1.read())))) {
        VbeatDelay_new_1_reg_259 = tmp_5_fu_714_p2.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_780_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_V_load_load_fu_786_p1.read()))) {
        VbeatDelay_new_1_reg_259 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_780_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_V_load_load_fu_786_p1.read()))) {
        VbeatFallDelay_new_1_reg_275 = ap_const_lv32_0;
    } else if (((esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_780_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_V_load_load_fu_786_p1.read())) || 
                (esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_780_p2.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_V_load_load_fu_786_p1.read())) || 
                (esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_780_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_V_load_load_fu_786_p1.read())))) {
        VbeatFallDelay_new_1_reg_275 = tmp_6_fu_724_p2.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read())) {
        if (ap_sig_bdd_234.read()) {
            last_sample_is_A = ap_const_lv1_1;
        } else if (ap_sig_bdd_242.read()) {
            last_sample_is_A = ap_const_lv1_0;
        }
    }
    if (esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read())) {
        if (ap_sig_bdd_209.read()) {
            last_sample_is_V = ap_const_lv1_1;
        } else if (ap_sig_bdd_214.read()) {
            last_sample_is_V = ap_const_lv1_0;
        }
    }
    if ((esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_780_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_V_load_load_fu_786_p1.read()))) {
        last_sample_is_V_loc_2_reg_290 = ap_const_lv1_0;
    } else if (((esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_780_p2.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_V_load_load_fu_786_p1.read())) || 
                (esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_780_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_V_load_load_fu_786_p1.read())))) {
        last_sample_is_V_loc_2_reg_290 = last_sample_is_V.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_780_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_V_load_load_fu_786_p1.read()))) {
        last_sample_is_V_loc_2_reg_290 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_fu_1030_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_A_load_load_fu_1026_p1.read()))) {
        tmp_14_reg_323 = ap_const_lv1_0;
    } else if (((esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_fu_1030_p2.read()) && 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_A_load_load_fu_1026_p1.read())) || 
                (esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_fu_1030_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_A_load_load_fu_1026_p1.read())))) {
        tmp_14_reg_323 = last_sample_is_A.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_fu_1030_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_A_load_load_fu_1026_p1.read()))) {
        tmp_14_reg_323 = ap_const_lv1_1;
    }
    if (esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read())) {
        AbeatDelay = AbeatDelay_new_reg_308.read();
    }
    if ((esl_seteq<1,5,5>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        AstimDelay = tmp_7_fu_406_p3.read();
        VstimDelay = tmp_8_fu_420_p3.read();
        recentdatapoints_data_addr_reg_1196 =  (sc_lv<5>) (tmp_i_4_fu_395_p1.read());
        tmp_7_reg_1201 = tmp_7_fu_406_p3.read();
        tmp_8_reg_1206 = tmp_8_fu_420_p3.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read())) {
        VbeatDelay = VbeatDelay_new_1_reg_259.read();
        VbeatFallDelay = VbeatFallDelay_new_1_reg_275.read();
        datapointA_reg_1335 = datapointA_fu_811_p3.read();
        tmp_13_reg_1340 = tmp_13_fu_830_p2.read();
    }
    if ((esl_seteq<1,5,5>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_361_p2.read()))) {
        aflip = a_flip.read();
        athresh = a_thresh.read();
        vflip = v_flip.read();
        vthresh = v_thresh.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        datapointV_reg_1238 = datapointV_fu_568_p3.read();
        recentdatapoints_len = tmp_36_i_fu_542_p3.read();
        recentdatapoints_sum = tmp_35_i_fu_530_p2.read();
        tmp_36_i_reg_1233 = tmp_36_i_fu_542_p3.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read())) {
        icmp_reg_1397 = icmp_fu_1020_p2.read();
        recentABools_sum = tmp_49_i_fu_983_p2.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        not_tmp_i2_reg_1290 = not_tmp_i2_fu_694_p2.read();
        recentVBools_len = tmp_43_i_fu_649_p3.read();
        tmp_i1_reg_1280 = tmp_i1_fu_637_p2.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read())) {
        not_tmp_i5_reg_1392 = not_tmp_i5_fu_954_p2.read();
        recentABools_len = tmp_50_i_fu_909_p3.read();
        tmp_i4_5_reg_1382 = tmp_i4_5_fu_897_p2.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        p_tmp_i1_reg_1274 = p_tmp_i1_fu_619_p3.read();
        recentVBools_data_load_reg_1269 = recentVBools_data_q0.read();
        recentVBools_head_i = p_tmp_i1_fu_619_p3.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read())) {
        p_tmp_i2_reg_1376 = p_tmp_i2_fu_879_p3.read();
        recentABools_data_load_reg_1371 = recentABools_data_q0.read();
        recentABools_head_i = p_tmp_i2_fu_879_p3.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        p_tmp_i_reg_1221 = p_tmp_i_fu_451_p3.read();
        recentdatapoints_data_load_reg_1216 = recentdatapoints_data_q0.read();
        recentdatapoints_head_i = p_tmp_i_fu_451_p3.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st14_fsm_13, ap_CS_fsm.read())) {
        recentABools_data_addr_reg_1366 =  (sc_lv<5>) (tmp_i5_fu_863_p1.read());
        tmp_11_reg_1355 = tmp_11_fu_853_p2.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        recentVBools_data_addr_reg_1264 =  (sc_lv<4>) (tmp_i2_fu_603_p1.read());
        tmp_s_reg_1253 = tmp_s_fu_593_p2.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read())) {
        recentVBools_sum = tmp_42_i_fu_753_p2.read();
        tmp_4_reg_1295 = tmp_4_fu_704_p2.read();
        tmp_i3_reg_1325 = tmp_i3_fu_802_p2.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read())) {
        tmp_20_reg_1411 = tmp_20_fu_1046_p2.read();
        tmp_23_reg_1416 = tmp_23_fu_1051_p2.read();
    }
}

void singleDecision::thread_AstimDelay_load_op_fu_400_p2() {
    AstimDelay_load_op_fu_400_p2 = (!AstimDelay.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(AstimDelay.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void singleDecision::thread_VstimDelay_load_op_fu_414_p2() {
    VstimDelay_load_op_fu_414_p2 = (!VstimDelay.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(VstimDelay.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void singleDecision::thread_ap_done() {
    if (esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void singleDecision::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,5,5>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void singleDecision::thread_ap_ready() {
    if (esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void singleDecision::thread_ap_sig_bdd_209() {
    ap_sig_bdd_209 = (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_780_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_V_load_load_fu_786_p1.read()));
}

void singleDecision::thread_ap_sig_bdd_214() {
    ap_sig_bdd_214 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_780_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_V_load_load_fu_786_p1.read()));
}

void singleDecision::thread_ap_sig_bdd_234() {
    ap_sig_bdd_234 = (!esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_fu_1030_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_A_load_load_fu_1026_p1.read()));
}

void singleDecision::thread_ap_sig_bdd_242() {
    ap_sig_bdd_242 = (esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_fu_1030_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, last_sample_is_A_load_load_fu_1026_p1.read()));
}

void singleDecision::thread_datapointA_fu_811_p3() {
    datapointA_fu_811_p3 = (!tmp_i3_reg_1325.read()[0].is_01())? sc_lv<16>(): ((tmp_i3_reg_1325.read()[0].to_bool())? recentdatapoints_data_q0.read(): ap_const_lv16_0);
}

void singleDecision::thread_datapointV_fu_568_p3() {
    datapointV_fu_568_p3 = (!tmp_i9_fu_562_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_i9_fu_562_p2.read()[0].to_bool())? ap_const_lv16_0: recentdatapoints_data_q0.read());
}

void singleDecision::thread_extLd1_fu_737_p1() {
    extLd1_fu_737_p1 = esl_zext<32,1>(recentVBools_data_load_reg_1269.read());
}

void singleDecision::thread_extLd2_fu_967_p1() {
    extLd2_fu_967_p1 = esl_zext<32,1>(recentABools_data_load_reg_1371.read());
}

void singleDecision::thread_grp_fu_583_ce() {
    grp_fu_583_ce = ap_const_logic_1;
}

void singleDecision::thread_grp_fu_583_p0() {
    grp_fu_583_p0 = vflip.read();
}

void singleDecision::thread_grp_fu_583_p1() {
    grp_fu_583_p1 = datapointV_reg_1238.read();
}

void singleDecision::thread_grp_fu_843_ce() {
    grp_fu_843_ce = ap_const_logic_1;
}

void singleDecision::thread_grp_fu_843_p0() {
    grp_fu_843_p0 = aflip.read();
}

void singleDecision::thread_grp_fu_843_p1() {
    grp_fu_843_p1 = datapointA_reg_1335.read();
}

void singleDecision::thread_i_1_fu_478_p2() {
    i_1_fu_478_p2 = (!p_tmp_i_reg_1221.read().is_01() || !ap_const_lv32_13.is_01())? sc_lv<32>(): (sc_bigint<32>(p_tmp_i_reg_1221.read()) + sc_biguint<32>(ap_const_lv32_13));
}

void singleDecision::thread_i_2_fu_663_p2() {
    i_2_fu_663_p2 = (!p_tmp_i1_reg_1274.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_bigint<32>(p_tmp_i1_reg_1274.read()) + sc_biguint<32>(ap_const_lv32_FFFFFFFF));
}

void singleDecision::thread_i_3_fu_676_p2() {
    i_3_fu_676_p2 = (!p_tmp_i1_reg_1274.read().is_01() || !ap_const_lv32_A.is_01())? sc_lv<32>(): (sc_bigint<32>(p_tmp_i1_reg_1274.read()) + sc_biguint<32>(ap_const_lv32_A));
}

void singleDecision::thread_i_4_fu_923_p2() {
    i_4_fu_923_p2 = (!p_tmp_i2_reg_1376.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_bigint<32>(p_tmp_i2_reg_1376.read()) + sc_biguint<32>(ap_const_lv32_FFFFFFFF));
}

void singleDecision::thread_i_5_fu_936_p2() {
    i_5_fu_936_p2 = (!p_tmp_i2_reg_1376.read().is_01() || !ap_const_lv32_1D.is_01())? sc_lv<32>(): (sc_bigint<32>(p_tmp_i2_reg_1376.read()) + sc_biguint<32>(ap_const_lv32_1D));
}

void singleDecision::thread_i_fu_465_p2() {
    i_fu_465_p2 = (!p_tmp_i_reg_1221.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_bigint<32>(p_tmp_i_reg_1221.read()) + sc_biguint<32>(ap_const_lv32_FFFFFFFF));
}

void singleDecision::thread_icmp_fu_1020_p2() {
    icmp_fu_1020_p2 = (!tmp_27_fu_1010_p4.read().is_01() || !ap_const_lv28_0.is_01())? sc_lv<1>(): (sc_bigint<28>(tmp_27_fu_1010_p4.read()) > sc_bigint<28>(ap_const_lv28_0));
}

void singleDecision::thread_last_sample_is_A_load_load_fu_1026_p1() {
    last_sample_is_A_load_load_fu_1026_p1 = last_sample_is_A.read();
}

void singleDecision::thread_last_sample_is_V_load_load_fu_786_p1() {
    last_sample_is_V_load_load_fu_786_p1 = last_sample_is_V.read();
}

void singleDecision::thread_not_tmp_i2_fu_694_p2() {
    not_tmp_i2_fu_694_p2 = (!tmp_43_i_fu_649_p3.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_43_i_fu_649_p3.read() != ap_const_lv32_0);
}

void singleDecision::thread_not_tmp_i5_fu_954_p2() {
    not_tmp_i5_fu_954_p2 = (!tmp_50_i_fu_909_p3.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_50_i_fu_909_p3.read() != ap_const_lv32_0);
}

void singleDecision::thread_or_cond1_fu_1151_p2() {
    or_cond1_fu_1151_p2 = (tmp1_fu_1146_p2.read() & tmp_21_fu_1134_p2.read());
}

void singleDecision::thread_or_cond2_fu_1030_p2() {
    or_cond2_fu_1030_p2 = (icmp_reg_1397.read() & tmp_13_reg_1340.read());
}

void singleDecision::thread_or_cond4_fu_1092_p2() {
    or_cond4_fu_1092_p2 = (tmp_17_fu_1080_p2.read() | tmp_18_fu_1086_p2.read());
}

void singleDecision::thread_or_cond8_fu_1129_p2() {
    or_cond8_fu_1129_p2 = (tmp_19_fu_1123_p2.read() & tmp_20_reg_1411.read());
}

void singleDecision::thread_or_cond_fu_1068_p2() {
    or_cond_fu_1068_p2 = (tmp_15_fu_1056_p2.read() | tmp_16_fu_1062_p2.read());
}

void singleDecision::thread_out_r() {
    out_r = esl_zext<16,7>(storemerge1_cast_fu_1118_p0.read());
}

void singleDecision::thread_out_r_ap_vld() {
    if (esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read())) {
        out_r_ap_vld = ap_const_logic_1;
    } else {
        out_r_ap_vld = ap_const_logic_0;
    }
}

void singleDecision::thread_p_0_i2_cast_fu_1000_p1() {
    p_0_i2_cast_fu_1000_p1 = esl_zext<32,1>(p_0_i2_fu_995_p2.read());
}

void singleDecision::thread_p_0_i2_fu_995_p2() {
    p_0_i2_fu_995_p2 = (recentABools_data_q0.read() & not_tmp_i5_reg_1392.read());
}

void singleDecision::thread_p_0_i_cast_fu_770_p1() {
    p_0_i_cast_fu_770_p1 = esl_zext<32,1>(p_0_i_fu_765_p2.read());
}

void singleDecision::thread_p_0_i_fu_765_p2() {
    p_0_i_fu_765_p2 = (recentVBools_data_q0.read() & not_tmp_i2_reg_1290.read());
}

void singleDecision::thread_p_i1_fu_681_p3() {
    p_i1_fu_681_p3 = (!tmp_25_fu_668_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_25_fu_668_p3.read()[0].to_bool())? i_3_fu_676_p2.read(): i_2_fu_663_p2.read());
}

void singleDecision::thread_p_i2_fu_941_p3() {
    p_i2_fu_941_p3 = (!tmp_26_fu_928_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_26_fu_928_p3.read()[0].to_bool())? i_5_fu_936_p2.read(): i_4_fu_923_p2.read());
}

void singleDecision::thread_p_i_fu_483_p3() {
    p_i_fu_483_p3 = (!tmp_12_fu_470_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_12_fu_470_p3.read()[0].to_bool())? i_1_fu_478_p2.read(): i_fu_465_p2.read());
}

void singleDecision::thread_p_s_fu_1157_p3() {
    p_s_fu_1157_p3 = (!or_cond1_fu_1151_p2.read()[0].is_01())? sc_lv<6>(): ((or_cond1_fu_1151_p2.read()[0].to_bool())? ap_const_lv6_36: ap_const_lv6_21);
}

void singleDecision::thread_p_tmp_i1_fu_619_p3() {
    p_tmp_i1_fu_619_p3 = (!tmp_45_i_fu_613_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_45_i_fu_613_p2.read()[0].to_bool())? ap_const_lv32_0: tmp_44_i_fu_608_p2.read());
}

void singleDecision::thread_p_tmp_i2_fu_879_p3() {
    p_tmp_i2_fu_879_p3 = (!tmp_52_i_fu_873_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_52_i_fu_873_p2.read()[0].to_bool())? ap_const_lv32_0: tmp_51_i_fu_868_p2.read());
}

void singleDecision::thread_p_tmp_i_fu_451_p3() {
    p_tmp_i_fu_451_p3 = (!tmp_38_i_fu_445_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_38_i_fu_445_p2.read()[0].to_bool())? ap_const_lv32_0: tmp_37_i_fu_440_p2.read());
}

void singleDecision::thread_recentABools_data_address0() {
    if (esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read())) {
        recentABools_data_address0 = recentABools_data_addr_reg_1366.read();
    } else if (esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read())) {
        recentABools_data_address0 =  (sc_lv<5>) (tmp_53_i_fu_949_p1.read());
    } else if (esl_seteq<1,5,5>(ap_ST_st14_fsm_13, ap_CS_fsm.read())) {
        recentABools_data_address0 =  (sc_lv<5>) (tmp_i5_fu_863_p1.read());
    } else {
        recentABools_data_address0 = "XXXXX";
    }
}

void singleDecision::thread_recentABools_data_ce0() {
    if ((esl_seteq<1,5,5>(ap_ST_st14_fsm_13, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()))) {
        recentABools_data_ce0 = ap_const_logic_1;
    } else {
        recentABools_data_ce0 = ap_const_logic_0;
    }
}

void singleDecision::thread_recentABools_data_d0() {
    recentABools_data_d0 = tmp_11_reg_1355.read();
}

void singleDecision::thread_recentABools_data_we0() {
    if ((esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()))) {
        recentABools_data_we0 = ap_const_logic_1;
    } else {
        recentABools_data_we0 = ap_const_logic_0;
    }
}

void singleDecision::thread_recentABools_len_load_op_fu_903_p2() {
    recentABools_len_load_op_fu_903_p2 = (!recentABools_len.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(recentABools_len.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void singleDecision::thread_recentABools_sum_loc_i_fu_976_p3() {
    recentABools_sum_loc_i_fu_976_p3 = (!tmp_i4_5_reg_1382.read()[0].is_01())? sc_lv<32>(): ((tmp_i4_5_reg_1382.read()[0].to_bool())? tmp_47_i_fu_970_p2.read(): recentABools_sum.read());
}

void singleDecision::thread_recentVBools_data_address0() {
    if (esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        recentVBools_data_address0 = recentVBools_data_addr_reg_1264.read();
    } else if (esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        recentVBools_data_address0 =  (sc_lv<4>) (tmp_46_i_fu_689_p1.read());
    } else if (esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        recentVBools_data_address0 =  (sc_lv<4>) (tmp_i2_fu_603_p1.read());
    } else {
        recentVBools_data_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void singleDecision::thread_recentVBools_data_ce0() {
    if ((esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()))) {
        recentVBools_data_ce0 = ap_const_logic_1;
    } else {
        recentVBools_data_ce0 = ap_const_logic_0;
    }
}

void singleDecision::thread_recentVBools_data_d0() {
    recentVBools_data_d0 = tmp_s_reg_1253.read();
}

void singleDecision::thread_recentVBools_data_we0() {
    if ((esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()))) {
        recentVBools_data_we0 = ap_const_logic_1;
    } else {
        recentVBools_data_we0 = ap_const_logic_0;
    }
}

void singleDecision::thread_recentVBools_len_load_op_fu_643_p2() {
    recentVBools_len_load_op_fu_643_p2 = (!recentVBools_len.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(recentVBools_len.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void singleDecision::thread_recentVBools_sum_loc_i_fu_746_p3() {
    recentVBools_sum_loc_i_fu_746_p3 = (!tmp_i1_reg_1280.read()[0].is_01())? sc_lv<32>(): ((tmp_i1_reg_1280.read()[0].to_bool())? tmp_40_i_fu_740_p2.read(): recentVBools_sum.read());
}

void singleDecision::thread_recentdatapoints_data_address0() {
    if (esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        recentdatapoints_data_address0 = recentdatapoints_data_addr_reg_1196.read();
    } else if (esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read())) {
        recentdatapoints_data_address0 =  (sc_lv<5>) (tmp_i4_fu_807_p1.read());
    } else if (esl_seteq<1,5,5>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        recentdatapoints_data_address0 =  (sc_lv<5>) (tmp_39_i_fu_491_p1.read());
    } else if (esl_seteq<1,5,5>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) {
        recentdatapoints_data_address0 =  (sc_lv<5>) (tmp_i_4_fu_395_p1.read());
    } else {
        recentdatapoints_data_address0 = "XXXXX";
    }
}

void singleDecision::thread_recentdatapoints_data_ce0() {
    if (((esl_seteq<1,5,5>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
         esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()))) {
        recentdatapoints_data_ce0 = ap_const_logic_1;
    } else {
        recentdatapoints_data_ce0 = ap_const_logic_0;
    }
}

void singleDecision::thread_recentdatapoints_data_d0() {
    recentdatapoints_data_d0 = datapoint.read();
}

void singleDecision::thread_recentdatapoints_data_we0() {
    if ((esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read()))) {
        recentdatapoints_data_we0 = ap_const_logic_1;
    } else {
        recentdatapoints_data_we0 = ap_const_logic_0;
    }
}

void singleDecision::thread_recentdatapoints_len_load_op_fu_536_p2() {
    recentdatapoints_len_load_op_fu_536_p2 = (!recentdatapoints_len.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(recentdatapoints_len.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void singleDecision::thread_recentdatapoints_sum_loc_i_fu_522_p3() {
    recentdatapoints_sum_loc_i_fu_522_p3 = (!tmp_i_fu_503_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_i_fu_503_p2.read()[0].to_bool())? tmp_33_i_fu_516_p2.read(): recentdatapoints_sum.read());
}

void singleDecision::thread_stim() {
    stim = esl_zext<16,7>(stim_new_1_cast_fu_1183_p0.read());
}

void singleDecision::thread_stim_ap_vld() {
    if (esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read())) {
        stim_ap_vld = ap_const_logic_1;
    } else {
        stim_ap_vld = ap_const_logic_0;
    }
}

void singleDecision::thread_stim_new_1_cast_fu_1183_p0() {
    stim_new_1_cast_fu_1183_p0 = esl_sext<7,6>(stim_new_1_fu_1171_p3.read());
}

void singleDecision::thread_stim_new_1_fu_1171_p3() {
    stim_new_1_fu_1171_p3 = (!tmp_24_fu_1165_p2.read()[0].is_01())? sc_lv<6>(): ((tmp_24_fu_1165_p2.read()[0].to_bool())? p_s_fu_1157_p3.read(): ap_const_lv6_0);
}

void singleDecision::thread_storemerge1_cast_fu_1118_p0() {
    storemerge1_cast_fu_1118_p0 = esl_sext<7,6>(storemerge1_fu_1106_p3.read());
}

void singleDecision::thread_storemerge1_fu_1106_p3() {
    storemerge1_fu_1106_p3 = (!or_cond_fu_1068_p2.read()[0].is_01())? sc_lv<6>(): ((or_cond_fu_1068_p2.read()[0].to_bool())? storemerge_fu_1098_p3.read(): ap_const_lv6_36);
}

void singleDecision::thread_storemerge_fu_1098_p3() {
    storemerge_fu_1098_p3 = (!or_cond4_fu_1092_p2.read()[0].is_01())? sc_lv<6>(): ((or_cond4_fu_1092_p2.read()[0].to_bool())? ap_const_lv6_0: ap_const_lv6_21);
}

void singleDecision::thread_sum_1_fu_774_p2() {
    sum_1_fu_774_p2 = (!p_0_i_cast_fu_770_p1.read().is_01() || !recentVBools_sum.read().is_01())? sc_lv<32>(): (sc_bigint<32>(p_0_i_cast_fu_770_p1.read()) + sc_biguint<32>(recentVBools_sum.read()));
}

void singleDecision::thread_sum_3_fu_1004_p2() {
    sum_3_fu_1004_p2 = (!p_0_i2_cast_fu_1000_p1.read().is_01() || !recentABools_sum.read().is_01())? sc_lv<32>(): (sc_bigint<32>(p_0_i2_cast_fu_1000_p1.read()) + sc_biguint<32>(recentABools_sum.read()));
}

void singleDecision::thread_tmp1_fu_1146_p2() {
    tmp1_fu_1146_p2 = (tmp_22_fu_1140_p2.read() & tmp_23_reg_1416.read());
}

void singleDecision::thread_tmp_11_fu_853_p2() {
    tmp_11_fu_853_p2 = (!grp_fu_843_p2.read().is_01() || !athresh.read().is_01())? sc_lv<1>(): (sc_bigint<32>(grp_fu_843_p2.read()) > sc_bigint<32>(athresh.read()));
}

void singleDecision::thread_tmp_12_fu_470_p3() {
    tmp_12_fu_470_p3 = i_fu_465_p2.read().range(31, 31);
}

void singleDecision::thread_tmp_13_fu_830_p2() {
    tmp_13_fu_830_p2 = (!VbeatDelay_new_1_reg_259.read().is_01() || !VbeatFallDelay_new_1_reg_275.read().is_01())? sc_lv<1>(): (sc_bigint<32>(VbeatDelay_new_1_reg_259.read()) > sc_bigint<32>(VbeatFallDelay_new_1_reg_275.read()));
}

void singleDecision::thread_tmp_15_fu_1056_p2() {
    tmp_15_fu_1056_p2 = (!VbeatDelay_new_1_reg_259.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(VbeatDelay_new_1_reg_259.read() != ap_const_lv32_0);
}

void singleDecision::thread_tmp_16_fu_1062_p2() {
    tmp_16_fu_1062_p2 = (last_sample_is_V_loc_2_reg_290.read() ^ ap_const_lv1_1);
}

void singleDecision::thread_tmp_17_fu_1080_p2() {
    tmp_17_fu_1080_p2 = (!AbeatDelay_new_reg_308.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(AbeatDelay_new_reg_308.read() != ap_const_lv32_0);
}

void singleDecision::thread_tmp_18_fu_1086_p2() {
    tmp_18_fu_1086_p2 = (tmp_14_reg_323.read() ^ ap_const_lv1_1);
}

void singleDecision::thread_tmp_19_fu_1123_p2() {
    tmp_19_fu_1123_p2 = (!AbeatDelay_new_reg_308.read().is_01() || !ap_const_lv32_3E8.is_01())? sc_lv<1>(): (sc_bigint<32>(AbeatDelay_new_reg_308.read()) > sc_bigint<32>(ap_const_lv32_3E8));
}

void singleDecision::thread_tmp_1_fu_351_p2() {
    tmp_1_fu_351_p2 = (!V_stim_reset.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(V_stim_reset.read() == ap_const_lv16_0);
}

void singleDecision::thread_tmp_20_fu_1046_p2() {
    tmp_20_fu_1046_p2 = (!tmp_7_reg_1201.read().is_01() || !ap_const_lv32_1E.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_7_reg_1201.read()) > sc_bigint<32>(ap_const_lv32_1E));
}

void singleDecision::thread_tmp_21_fu_1134_p2() {
    tmp_21_fu_1134_p2 = (!VbeatDelay_new_1_reg_259.read().is_01() || !AbeatDelay_new_reg_308.read().is_01())? sc_lv<1>(): (sc_bigint<32>(VbeatDelay_new_1_reg_259.read()) > sc_bigint<32>(AbeatDelay_new_reg_308.read()));
}

void singleDecision::thread_tmp_22_fu_1140_p2() {
    tmp_22_fu_1140_p2 = (!AbeatDelay_new_reg_308.read().is_01() || !ap_const_lv32_384.is_01())? sc_lv<1>(): (sc_bigint<32>(AbeatDelay_new_reg_308.read()) > sc_bigint<32>(ap_const_lv32_384));
}

void singleDecision::thread_tmp_23_fu_1051_p2() {
    tmp_23_fu_1051_p2 = (!tmp_8_reg_1206.read().is_01() || !ap_const_lv32_B.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_8_reg_1206.read()) > sc_bigint<32>(ap_const_lv32_B));
}

void singleDecision::thread_tmp_24_fu_1165_p2() {
    tmp_24_fu_1165_p2 = (or_cond1_fu_1151_p2.read() | or_cond8_fu_1129_p2.read());
}

void singleDecision::thread_tmp_25_fu_668_p3() {
    tmp_25_fu_668_p3 = i_2_fu_663_p2.read().range(31, 31);
}

void singleDecision::thread_tmp_26_fu_928_p3() {
    tmp_26_fu_928_p3 = i_4_fu_923_p2.read().range(31, 31);
}

void singleDecision::thread_tmp_27_fu_1010_p4() {
    tmp_27_fu_1010_p4 = sum_3_fu_1004_p2.read().range(31, 4);
}

void singleDecision::thread_tmp_2_fu_361_p2() {
    tmp_2_fu_361_p2 = (!set_thresh.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(set_thresh.read() == ap_const_lv16_0);
}

void singleDecision::thread_tmp_33_i_fu_516_p1() {
    tmp_33_i_fu_516_p1 = esl_sext<32,16>(recentdatapoints_data_load_reg_1216.read());
}

void singleDecision::thread_tmp_33_i_fu_516_p2() {
    tmp_33_i_fu_516_p2 = (!recentdatapoints_sum.read().is_01() || !tmp_33_i_fu_516_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(recentdatapoints_sum.read()) - sc_biguint<32>(tmp_33_i_fu_516_p1.read()));
}

void singleDecision::thread_tmp_35_i_fu_530_p1() {
    tmp_35_i_fu_530_p1 = esl_sext<32,16>(datapoint.read());
}

void singleDecision::thread_tmp_35_i_fu_530_p2() {
    tmp_35_i_fu_530_p2 = (!recentdatapoints_sum_loc_i_fu_522_p3.read().is_01() || !tmp_35_i_fu_530_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(recentdatapoints_sum_loc_i_fu_522_p3.read()) + sc_biguint<32>(tmp_35_i_fu_530_p1.read()));
}

void singleDecision::thread_tmp_36_i_fu_542_p3() {
    tmp_36_i_fu_542_p3 = (!tmp_i_fu_503_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_i_fu_503_p2.read()[0].to_bool())? ap_const_lv32_14: recentdatapoints_len_load_op_fu_536_p2.read());
}

void singleDecision::thread_tmp_37_i_fu_440_p2() {
    tmp_37_i_fu_440_p2 = (!recentdatapoints_head_i.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(recentdatapoints_head_i.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void singleDecision::thread_tmp_38_i_fu_445_p2() {
    tmp_38_i_fu_445_p2 = (!tmp_37_i_fu_440_p2.read().is_01() || !ap_const_lv32_14.is_01())? sc_lv<1>(): sc_lv<1>(tmp_37_i_fu_440_p2.read() == ap_const_lv32_14);
}

void singleDecision::thread_tmp_39_i_fu_491_p1() {
    tmp_39_i_fu_491_p1 = esl_sext<64,32>(p_i_fu_483_p3.read());
}

void singleDecision::thread_tmp_3_fu_780_p2() {
    tmp_3_fu_780_p2 = (!sum_1_fu_774_p2.read().is_01() || !ap_const_lv32_5.is_01())? sc_lv<1>(): (sc_bigint<32>(sum_1_fu_774_p2.read()) > sc_bigint<32>(ap_const_lv32_5));
}

void singleDecision::thread_tmp_40_i_fu_740_p2() {
    tmp_40_i_fu_740_p2 = (!recentVBools_sum.read().is_01() || !extLd1_fu_737_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(recentVBools_sum.read()) - sc_biguint<32>(extLd1_fu_737_p1.read()));
}

void singleDecision::thread_tmp_42_i_fu_753_p2() {
    tmp_42_i_fu_753_p2 = (!recentVBools_sum_loc_i_fu_746_p3.read().is_01() || !val_assign_1_fu_734_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(recentVBools_sum_loc_i_fu_746_p3.read()) + sc_biguint<32>(val_assign_1_fu_734_p1.read()));
}

void singleDecision::thread_tmp_43_i_fu_649_p3() {
    tmp_43_i_fu_649_p3 = (!tmp_i1_fu_637_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_i1_fu_637_p2.read()[0].to_bool())? ap_const_lv32_B: recentVBools_len_load_op_fu_643_p2.read());
}

void singleDecision::thread_tmp_44_i_fu_608_p2() {
    tmp_44_i_fu_608_p2 = (!recentVBools_head_i.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(recentVBools_head_i.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void singleDecision::thread_tmp_45_i_fu_613_p2() {
    tmp_45_i_fu_613_p2 = (!tmp_44_i_fu_608_p2.read().is_01() || !ap_const_lv32_B.is_01())? sc_lv<1>(): sc_lv<1>(tmp_44_i_fu_608_p2.read() == ap_const_lv32_B);
}

void singleDecision::thread_tmp_46_i_fu_689_p1() {
    tmp_46_i_fu_689_p1 = esl_sext<64,32>(p_i1_fu_681_p3.read());
}

void singleDecision::thread_tmp_47_i_fu_970_p2() {
    tmp_47_i_fu_970_p2 = (!recentABools_sum.read().is_01() || !extLd2_fu_967_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(recentABools_sum.read()) - sc_biguint<32>(extLd2_fu_967_p1.read()));
}

void singleDecision::thread_tmp_49_i_fu_983_p2() {
    tmp_49_i_fu_983_p2 = (!recentABools_sum_loc_i_fu_976_p3.read().is_01() || !val_assign_2_fu_964_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(recentABools_sum_loc_i_fu_976_p3.read()) + sc_biguint<32>(val_assign_2_fu_964_p1.read()));
}

void singleDecision::thread_tmp_4_fu_704_p2() {
    tmp_4_fu_704_p2 = (!AbeatDelay.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(AbeatDelay.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void singleDecision::thread_tmp_50_i_fu_909_p3() {
    tmp_50_i_fu_909_p3 = (!tmp_i4_5_fu_897_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_i4_5_fu_897_p2.read()[0].to_bool())? ap_const_lv32_1E: recentABools_len_load_op_fu_903_p2.read());
}

void singleDecision::thread_tmp_51_i_fu_868_p2() {
    tmp_51_i_fu_868_p2 = (!recentABools_head_i.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(recentABools_head_i.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void singleDecision::thread_tmp_52_i_fu_873_p2() {
    tmp_52_i_fu_873_p2 = (!tmp_51_i_fu_868_p2.read().is_01() || !ap_const_lv32_1E.is_01())? sc_lv<1>(): sc_lv<1>(tmp_51_i_fu_868_p2.read() == ap_const_lv32_1E);
}

void singleDecision::thread_tmp_53_i_fu_949_p1() {
    tmp_53_i_fu_949_p1 = esl_sext<64,32>(p_i2_fu_941_p3.read());
}

void singleDecision::thread_tmp_5_fu_714_p2() {
    tmp_5_fu_714_p2 = (!VbeatDelay.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(VbeatDelay.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void singleDecision::thread_tmp_6_fu_724_p2() {
    tmp_6_fu_724_p2 = (!VbeatFallDelay.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(VbeatFallDelay.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void singleDecision::thread_tmp_7_fu_406_p3() {
    tmp_7_fu_406_p3 = (!tmp_fu_341_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_fu_341_p2.read()[0].to_bool())? AstimDelay_load_op_fu_400_p2.read(): ap_const_lv32_1);
}

void singleDecision::thread_tmp_8_fu_420_p3() {
    tmp_8_fu_420_p3 = (!tmp_1_fu_351_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_1_fu_351_p2.read()[0].to_bool())? VstimDelay_load_op_fu_414_p2.read(): ap_const_lv32_1);
}

void singleDecision::thread_tmp_fu_341_p2() {
    tmp_fu_341_p2 = (!A_stim_reset.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(A_stim_reset.read() == ap_const_lv16_0);
}

void singleDecision::thread_tmp_i1_fu_637_p2() {
    tmp_i1_fu_637_p2 = (!recentVBools_len.read().is_01() || !ap_const_lv32_B.is_01())? sc_lv<1>(): sc_lv<1>(recentVBools_len.read() == ap_const_lv32_B);
}

void singleDecision::thread_tmp_i2_fu_603_p1() {
    tmp_i2_fu_603_p1 = esl_sext<64,32>(recentVBools_head_i.read());
}

void singleDecision::thread_tmp_i3_fu_802_p2() {
    tmp_i3_fu_802_p2 = (!tmp_36_i_reg_1233.read().is_01() || !ap_const_lv32_14.is_01())? sc_lv<1>(): sc_lv<1>(tmp_36_i_reg_1233.read() == ap_const_lv32_14);
}

void singleDecision::thread_tmp_i4_5_fu_897_p2() {
    tmp_i4_5_fu_897_p2 = (!recentABools_len.read().is_01() || !ap_const_lv32_1E.is_01())? sc_lv<1>(): sc_lv<1>(recentABools_len.read() == ap_const_lv32_1E);
}

void singleDecision::thread_tmp_i4_fu_807_p1() {
    tmp_i4_fu_807_p1 = esl_sext<64,32>(p_tmp_i_reg_1221.read());
}

void singleDecision::thread_tmp_i5_fu_863_p1() {
    tmp_i5_fu_863_p1 = esl_sext<64,32>(recentABools_head_i.read());
}

void singleDecision::thread_tmp_i9_fu_562_p2() {
    tmp_i9_fu_562_p2 = (!tmp_36_i_fu_542_p3.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_36_i_fu_542_p3.read() == ap_const_lv32_0);
}

void singleDecision::thread_tmp_i_4_fu_395_p1() {
    tmp_i_4_fu_395_p1 = esl_sext<64,32>(recentdatapoints_head_i.read());
}

void singleDecision::thread_tmp_i_fu_503_p2() {
    tmp_i_fu_503_p2 = (!recentdatapoints_len.read().is_01() || !ap_const_lv32_14.is_01())? sc_lv<1>(): sc_lv<1>(recentdatapoints_len.read() == ap_const_lv32_14);
}

void singleDecision::thread_tmp_s_fu_593_p2() {
    tmp_s_fu_593_p2 = (!grp_fu_583_p2.read().is_01() || !vthresh.read().is_01())? sc_lv<1>(): (sc_bigint<32>(grp_fu_583_p2.read()) > sc_bigint<32>(vthresh.read()));
}

void singleDecision::thread_val_assign_1_fu_734_p1() {
    val_assign_1_fu_734_p1 = esl_zext<32,1>(tmp_s_reg_1253.read());
}

void singleDecision::thread_val_assign_2_fu_964_p1() {
    val_assign_2_fu_964_p1 = esl_zext<32,1>(tmp_11_reg_1355.read());
}

void singleDecision::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 0 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 10 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 11 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 12 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 14 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 15 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 17 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 18 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

void singleDecision::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_stim_reset\" :  \"" << A_stim_reset.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"V_stim_reset\" :  \"" << V_stim_reset.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"set_thresh\" :  \"" << set_thresh.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v_thresh\" :  \"" << v_thresh.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_thresh\" :  \"" << a_thresh.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_flip\" :  \"" << a_flip.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v_flip\" :  \"" << v_flip.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"datapoint\" :  \"" << datapoint.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r\" :  \"" << out_r.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_ap_vld\" :  \"" << out_r_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stim\" :  \"" << stim.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stim_ap_vld\" :  \"" << stim_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

