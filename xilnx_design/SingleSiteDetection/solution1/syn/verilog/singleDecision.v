// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="singleDecision,hls_ip_2014_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.718000,HLS_SYN_LAT=18,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module singleDecision (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_stim_reset,
        V_stim_reset,
        set_thresh,
        v_thresh,
        a_thresh,
        a_flip,
        v_flip,
        datapoint,
        out_r,
        out_r_ap_vld,
        stim,
        stim_ap_vld
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 5'b00000;
parameter    ap_ST_st2_fsm_1 = 5'b1;
parameter    ap_ST_st3_fsm_2 = 5'b10;
parameter    ap_ST_st4_fsm_3 = 5'b11;
parameter    ap_ST_st5_fsm_4 = 5'b100;
parameter    ap_ST_st6_fsm_5 = 5'b101;
parameter    ap_ST_st7_fsm_6 = 5'b110;
parameter    ap_ST_st8_fsm_7 = 5'b111;
parameter    ap_ST_st9_fsm_8 = 5'b1000;
parameter    ap_ST_st10_fsm_9 = 5'b1001;
parameter    ap_ST_st11_fsm_10 = 5'b1010;
parameter    ap_ST_st12_fsm_11 = 5'b1011;
parameter    ap_ST_st13_fsm_12 = 5'b1100;
parameter    ap_ST_st14_fsm_13 = 5'b1101;
parameter    ap_ST_st15_fsm_14 = 5'b1110;
parameter    ap_ST_st16_fsm_15 = 5'b1111;
parameter    ap_ST_st17_fsm_16 = 5'b10000;
parameter    ap_ST_st18_fsm_17 = 5'b10001;
parameter    ap_ST_st19_fsm_18 = 5'b10010;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv28_0 = 28'b0000000000000000000000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv6_21 = 6'b100001;
parameter    ap_const_lv6_36 = 6'b110110;
parameter    ap_const_lv32_3E8 = 32'b1111101000;
parameter    ap_const_lv32_384 = 32'b1110000100;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] A_stim_reset;
input  [15:0] V_stim_reset;
input  [15:0] set_thresh;
input  [31:0] v_thresh;
input  [31:0] a_thresh;
input  [31:0] a_flip;
input  [31:0] v_flip;
input  [15:0] datapoint;
output  [15:0] out_r;
output   out_r_ap_vld;
output  [15:0] stim;
output   stim_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_r_ap_vld;
reg stim_ap_vld;
reg   [4:0] ap_CS_fsm = 5'b00000;
reg   [31:0] AstimDelay = 32'b00000000000000000000000000000000;
reg   [31:0] VstimDelay = 32'b00000000000000000000000000000000;
reg   [31:0] vthresh = 32'b10100001;
reg   [31:0] athresh = 32'b1001000;
reg   [31:0] aflip = 32'b1;
reg   [31:0] vflip = 32'b11111111111111111111111111111111;
reg   [31:0] recentdatapoints_len = 32'b00000000000000000000000000000000;
reg   [31:0] recentdatapoints_head_i = 32'b00000000000000000000000000000000;
reg   [31:0] recentdatapoints_sum = 32'b00000000000000000000000000000000;
reg   [4:0] recentdatapoints_data_address0;
reg    recentdatapoints_data_ce0;
reg    recentdatapoints_data_we0;
wire   [15:0] recentdatapoints_data_d0;
wire   [15:0] recentdatapoints_data_q0;
reg   [31:0] AbeatDelay = 32'b00000000000000000000000000000000;
reg   [31:0] VbeatDelay = 32'b00000000000000000000000000000000;
reg   [31:0] VbeatFallDelay = 32'b00000000000000000000000000000000;
reg   [31:0] recentVBools_sum = 32'b00000000000000000000000000000000;
reg   [31:0] recentVBools_len = 32'b00000000000000000000000000000000;
reg   [31:0] recentVBools_head_i = 32'b00000000000000000000000000000000;
reg   [3:0] recentVBools_data_address0;
reg    recentVBools_data_ce0;
reg    recentVBools_data_we0;
wire   [0:0] recentVBools_data_d0;
wire   [0:0] recentVBools_data_q0;
reg   [0:0] last_sample_is_V = 1'b0;
reg   [31:0] recentABools_sum = 32'b00000000000000000000000000000000;
reg   [31:0] recentABools_len = 32'b00000000000000000000000000000000;
reg   [31:0] recentABools_head_i = 32'b00000000000000000000000000000000;
reg   [4:0] recentABools_data_address0;
reg    recentABools_data_ce0;
reg    recentABools_data_we0;
wire   [0:0] recentABools_data_d0;
wire   [0:0] recentABools_data_q0;
reg   [0:0] last_sample_is_A = 1'b0;
reg   [4:0] recentdatapoints_data_addr_reg_1196;
wire   [31:0] tmp_7_fu_406_p3;
reg   [31:0] tmp_7_reg_1201;
wire   [31:0] tmp_8_fu_420_p3;
reg   [31:0] tmp_8_reg_1206;
reg   [15:0] recentdatapoints_data_load_reg_1216;
wire   [31:0] p_tmp_i_fu_451_p3;
reg   [31:0] p_tmp_i_reg_1221;
wire   [31:0] tmp_36_i_fu_542_p3;
reg   [31:0] tmp_36_i_reg_1233;
wire   [15:0] datapointV_fu_568_p3;
reg   [15:0] datapointV_reg_1238;
wire   [0:0] tmp_s_fu_593_p2;
reg   [0:0] tmp_s_reg_1253;
reg   [3:0] recentVBools_data_addr_reg_1264;
reg   [0:0] recentVBools_data_load_reg_1269;
wire   [31:0] p_tmp_i1_fu_619_p3;
reg   [31:0] p_tmp_i1_reg_1274;
wire   [0:0] tmp_i1_fu_637_p2;
reg   [0:0] tmp_i1_reg_1280;
wire   [0:0] not_tmp_i2_fu_694_p2;
reg   [0:0] not_tmp_i2_reg_1290;
wire   [31:0] tmp_4_fu_704_p2;
reg   [31:0] tmp_4_reg_1295;
wire   [31:0] tmp_5_fu_714_p2;
wire   [31:0] tmp_6_fu_724_p2;
wire   [0:0] last_sample_is_V_load_load_fu_786_p1;
wire   [0:0] tmp_i3_fu_802_p2;
reg   [0:0] tmp_i3_reg_1325;
wire   [15:0] datapointA_fu_811_p3;
reg   [15:0] datapointA_reg_1335;
wire   [0:0] tmp_13_fu_830_p2;
reg   [0:0] tmp_13_reg_1340;
wire   [0:0] tmp_11_fu_853_p2;
reg   [0:0] tmp_11_reg_1355;
reg   [4:0] recentABools_data_addr_reg_1366;
reg   [0:0] recentABools_data_load_reg_1371;
wire   [31:0] p_tmp_i2_fu_879_p3;
reg   [31:0] p_tmp_i2_reg_1376;
wire   [0:0] tmp_i4_5_fu_897_p2;
reg   [0:0] tmp_i4_5_reg_1382;
wire   [0:0] not_tmp_i5_fu_954_p2;
reg   [0:0] not_tmp_i5_reg_1392;
wire   [0:0] icmp_fu_1020_p2;
reg   [0:0] icmp_reg_1397;
wire   [0:0] last_sample_is_A_load_load_fu_1026_p1;
wire   [0:0] tmp_20_fu_1046_p2;
reg   [0:0] tmp_20_reg_1411;
wire   [0:0] tmp_23_fu_1051_p2;
reg   [0:0] tmp_23_reg_1416;
reg   [31:0] VbeatDelay_new_1_reg_259;
wire   [0:0] tmp_3_fu_780_p2;
reg   [31:0] VbeatFallDelay_new_1_reg_275;
reg   [0:0] last_sample_is_V_loc_2_reg_290;
reg   [31:0] AbeatDelay_new_reg_308;
wire   [0:0] or_cond2_fu_1030_p2;
reg   [0:0] tmp_14_reg_323;
wire   [63:0] tmp_i_4_fu_395_p1;
wire   [63:0] tmp_39_i_fu_491_p1;
wire   [63:0] tmp_i2_fu_603_p1;
wire   [63:0] tmp_46_i_fu_689_p1;
wire   [63:0] tmp_i4_fu_807_p1;
wire   [63:0] tmp_i5_fu_863_p1;
wire   [63:0] tmp_53_i_fu_949_p1;
wire   [0:0] tmp_2_fu_361_p2;
wire   [31:0] tmp_35_i_fu_530_p2;
wire   [31:0] tmp_42_i_fu_753_p2;
wire   [31:0] tmp_43_i_fu_649_p3;
wire   [31:0] tmp_49_i_fu_983_p2;
wire   [31:0] tmp_50_i_fu_909_p3;
wire   [0:0] tmp_fu_341_p2;
wire   [31:0] AstimDelay_load_op_fu_400_p2;
wire   [0:0] tmp_1_fu_351_p2;
wire   [31:0] VstimDelay_load_op_fu_414_p2;
wire   [31:0] tmp_37_i_fu_440_p2;
wire   [0:0] tmp_38_i_fu_445_p2;
wire   [31:0] i_fu_465_p2;
wire   [0:0] tmp_12_fu_470_p3;
wire   [31:0] i_1_fu_478_p2;
wire   [31:0] p_i_fu_483_p3;
wire   [31:0] tmp_33_i_fu_516_p1;
wire   [0:0] tmp_i_fu_503_p2;
wire   [31:0] tmp_33_i_fu_516_p2;
wire   [31:0] recentdatapoints_sum_loc_i_fu_522_p3;
wire   [31:0] tmp_35_i_fu_530_p1;
wire   [31:0] recentdatapoints_len_load_op_fu_536_p2;
wire   [0:0] tmp_i9_fu_562_p2;
wire   [31:0] grp_fu_583_p0;
wire   [15:0] grp_fu_583_p1;
wire   [31:0] grp_fu_583_p2;
wire   [31:0] tmp_44_i_fu_608_p2;
wire   [0:0] tmp_45_i_fu_613_p2;
wire   [31:0] recentVBools_len_load_op_fu_643_p2;
wire   [31:0] i_2_fu_663_p2;
wire   [0:0] tmp_25_fu_668_p3;
wire   [31:0] i_3_fu_676_p2;
wire   [31:0] p_i1_fu_681_p3;
wire   [31:0] extLd1_fu_737_p1;
wire   [31:0] tmp_40_i_fu_740_p2;
wire   [31:0] recentVBools_sum_loc_i_fu_746_p3;
wire   [31:0] val_assign_1_fu_734_p1;
wire   [0:0] p_0_i_fu_765_p2;
wire   [31:0] p_0_i_cast_fu_770_p1;
wire   [31:0] sum_1_fu_774_p2;
wire   [31:0] grp_fu_843_p0;
wire   [15:0] grp_fu_843_p1;
wire   [31:0] grp_fu_843_p2;
wire   [31:0] tmp_51_i_fu_868_p2;
wire   [0:0] tmp_52_i_fu_873_p2;
wire   [31:0] recentABools_len_load_op_fu_903_p2;
wire   [31:0] i_4_fu_923_p2;
wire   [0:0] tmp_26_fu_928_p3;
wire   [31:0] i_5_fu_936_p2;
wire   [31:0] p_i2_fu_941_p3;
wire   [31:0] extLd2_fu_967_p1;
wire   [31:0] tmp_47_i_fu_970_p2;
wire   [31:0] recentABools_sum_loc_i_fu_976_p3;
wire   [31:0] val_assign_2_fu_964_p1;
wire   [0:0] p_0_i2_fu_995_p2;
wire   [31:0] p_0_i2_cast_fu_1000_p1;
wire   [31:0] sum_3_fu_1004_p2;
wire   [27:0] tmp_27_fu_1010_p4;
wire   [0:0] tmp_15_fu_1056_p2;
wire   [0:0] tmp_16_fu_1062_p2;
wire   [0:0] tmp_17_fu_1080_p2;
wire   [0:0] tmp_18_fu_1086_p2;
wire   [0:0] or_cond4_fu_1092_p2;
wire   [0:0] or_cond_fu_1068_p2;
wire   [5:0] storemerge_fu_1098_p3;
wire   [5:0] storemerge1_fu_1106_p3;
wire   [6:0] storemerge1_cast_fu_1118_p0;
wire   [0:0] tmp_19_fu_1123_p2;
wire   [0:0] tmp_22_fu_1140_p2;
wire   [0:0] tmp1_fu_1146_p2;
wire   [0:0] tmp_21_fu_1134_p2;
wire   [0:0] or_cond1_fu_1151_p2;
wire   [0:0] or_cond8_fu_1129_p2;
wire   [0:0] tmp_24_fu_1165_p2;
wire   [5:0] p_s_fu_1157_p3;
wire   [5:0] stim_new_1_fu_1171_p3;
wire   [6:0] stim_new_1_cast_fu_1183_p0;
wire    grp_fu_583_ce;
wire    grp_fu_843_ce;
reg   [4:0] ap_NS_fsm;
reg    ap_sig_bdd_242;
reg    ap_sig_bdd_234;
reg    ap_sig_bdd_214;
reg    ap_sig_bdd_209;


singleDecision_recentdatapoints_data #(
    .DataWidth( 16 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
recentdatapoints_data_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( recentdatapoints_data_address0 ),
    .ce0( recentdatapoints_data_ce0 ),
    .we0( recentdatapoints_data_we0 ),
    .d0( recentdatapoints_data_d0 ),
    .q0( recentdatapoints_data_q0 )
);

singleDecision_recentVBools_data #(
    .DataWidth( 1 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
recentVBools_data_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( recentVBools_data_address0 ),
    .ce0( recentVBools_data_ce0 ),
    .we0( recentVBools_data_we0 ),
    .d0( recentVBools_data_d0 ),
    .q0( recentVBools_data_q0 )
);

singleDecision_recentABools_data #(
    .DataWidth( 1 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
recentABools_data_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( recentABools_data_address0 ),
    .ce0( recentABools_data_ce0 ),
    .we0( recentABools_data_we0 ),
    .d0( recentABools_data_d0 ),
    .q0( recentABools_data_q0 )
);

singleDecision_mul_32s_16s_32_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
singleDecision_mul_32s_16s_32_3_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_583_p0 ),
    .din1( grp_fu_583_p1 ),
    .ce( grp_fu_583_ce ),
    .dout( grp_fu_583_p2 )
);

singleDecision_mul_32s_16s_32_3 #(
    .ID( 2 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
singleDecision_mul_32s_16s_32_3_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_843_p0 ),
    .din1( grp_fu_843_p1 ),
    .ce( grp_fu_843_ce ),
    .dout( grp_fu_843_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~(ap_const_lv1_0 == or_cond2_fu_1030_p2) & ~(ap_const_lv1_0 == last_sample_is_A_load_load_fu_1026_p1)) | ((ap_ST_st18_fsm_17 == ap_CS_fsm) & (ap_const_lv1_0 == or_cond2_fu_1030_p2) & (ap_const_lv1_0 == last_sample_is_A_load_load_fu_1026_p1)) | ((ap_ST_st18_fsm_17 == ap_CS_fsm) & (ap_const_lv1_0 == or_cond2_fu_1030_p2) & ~(ap_const_lv1_0 == last_sample_is_A_load_load_fu_1026_p1)))) begin
        AbeatDelay_new_reg_308 <= tmp_4_reg_1295;
    end else if (((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~(ap_const_lv1_0 == or_cond2_fu_1030_p2) & (ap_const_lv1_0 == last_sample_is_A_load_load_fu_1026_p1))) begin
        AbeatDelay_new_reg_308 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_780_p2) & ~(ap_const_lv1_0 == last_sample_is_V_load_load_fu_786_p1)) | ((ap_ST_st10_fsm_9 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_3_fu_780_p2) & ~(ap_const_lv1_0 == last_sample_is_V_load_load_fu_786_p1)) | ((ap_ST_st10_fsm_9 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_3_fu_780_p2) & (ap_const_lv1_0 == last_sample_is_V_load_load_fu_786_p1)))) begin
        VbeatDelay_new_1_reg_259 <= tmp_5_fu_714_p2;
    end else if (((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_780_p2) & (ap_const_lv1_0 == last_sample_is_V_load_load_fu_786_p1))) begin
        VbeatDelay_new_1_reg_259 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st10_fsm_9 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_3_fu_780_p2) & ~(ap_const_lv1_0 == last_sample_is_V_load_load_fu_786_p1))) begin
        VbeatFallDelay_new_1_reg_275 <= ap_const_lv32_0;
    end else if ((((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_780_p2) & (ap_const_lv1_0 == last_sample_is_V_load_load_fu_786_p1)) | ((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_780_p2) & ~(ap_const_lv1_0 == last_sample_is_V_load_load_fu_786_p1)) | ((ap_ST_st10_fsm_9 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_3_fu_780_p2) & (ap_const_lv1_0 == last_sample_is_V_load_load_fu_786_p1)))) begin
        VbeatFallDelay_new_1_reg_275 <= tmp_6_fu_724_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        if (ap_sig_bdd_234) begin
            last_sample_is_A <= ap_const_lv1_1;
        end else if (ap_sig_bdd_242) begin
            last_sample_is_A <= ap_const_lv1_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        if (ap_sig_bdd_209) begin
            last_sample_is_V <= ap_const_lv1_1;
        end else if (ap_sig_bdd_214) begin
            last_sample_is_V <= ap_const_lv1_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st10_fsm_9 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_3_fu_780_p2) & ~(ap_const_lv1_0 == last_sample_is_V_load_load_fu_786_p1))) begin
        last_sample_is_V_loc_2_reg_290 <= ap_const_lv1_0;
    end else if ((((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_780_p2) & ~(ap_const_lv1_0 == last_sample_is_V_load_load_fu_786_p1)) | ((ap_ST_st10_fsm_9 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_3_fu_780_p2) & (ap_const_lv1_0 == last_sample_is_V_load_load_fu_786_p1)))) begin
        last_sample_is_V_loc_2_reg_290 <= last_sample_is_V;
    end else if (((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_3_fu_780_p2) & (ap_const_lv1_0 == last_sample_is_V_load_load_fu_786_p1))) begin
        last_sample_is_V_loc_2_reg_290 <= ap_const_lv1_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st18_fsm_17 == ap_CS_fsm) & (ap_const_lv1_0 == or_cond2_fu_1030_p2) & ~(ap_const_lv1_0 == last_sample_is_A_load_load_fu_1026_p1))) begin
        tmp_14_reg_323 <= ap_const_lv1_0;
    end else if ((((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~(ap_const_lv1_0 == or_cond2_fu_1030_p2) & ~(ap_const_lv1_0 == last_sample_is_A_load_load_fu_1026_p1)) | ((ap_ST_st18_fsm_17 == ap_CS_fsm) & (ap_const_lv1_0 == or_cond2_fu_1030_p2) & (ap_const_lv1_0 == last_sample_is_A_load_load_fu_1026_p1)))) begin
        tmp_14_reg_323 <= last_sample_is_A;
    end else if (((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~(ap_const_lv1_0 == or_cond2_fu_1030_p2) & (ap_const_lv1_0 == last_sample_is_A_load_load_fu_1026_p1))) begin
        tmp_14_reg_323 <= ap_const_lv1_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        AbeatDelay <= AbeatDelay_new_reg_308;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        AstimDelay <= tmp_7_fu_406_p3;
        VstimDelay <= tmp_8_fu_420_p3;
        recentdatapoints_data_addr_reg_1196 <= tmp_i_4_fu_395_p1;
        tmp_7_reg_1201 <= tmp_7_fu_406_p3;
        tmp_8_reg_1206 <= tmp_8_fu_420_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        VbeatDelay <= VbeatDelay_new_1_reg_259;
        VbeatFallDelay <= VbeatFallDelay_new_1_reg_275;
        datapointA_reg_1335 <= datapointA_fu_811_p3;
        tmp_13_reg_1340 <= tmp_13_fu_830_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (ap_const_lv1_0 == tmp_2_fu_361_p2))) begin
        aflip <= a_flip;
        athresh <= a_thresh;
        vflip <= v_flip;
        vthresh <= v_thresh;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        datapointV_reg_1238 <= datapointV_fu_568_p3;
        recentdatapoints_len <= tmp_36_i_fu_542_p3;
        recentdatapoints_sum <= tmp_35_i_fu_530_p2;
        tmp_36_i_reg_1233 <= tmp_36_i_fu_542_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        icmp_reg_1397 <= icmp_fu_1020_p2;
        recentABools_sum <= tmp_49_i_fu_983_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        not_tmp_i2_reg_1290 <= not_tmp_i2_fu_694_p2;
        recentVBools_len <= tmp_43_i_fu_649_p3;
        tmp_i1_reg_1280 <= tmp_i1_fu_637_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st16_fsm_15 == ap_CS_fsm)) begin
        not_tmp_i5_reg_1392 <= not_tmp_i5_fu_954_p2;
        recentABools_len <= tmp_50_i_fu_909_p3;
        tmp_i4_5_reg_1382 <= tmp_i4_5_fu_897_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        p_tmp_i1_reg_1274 <= p_tmp_i1_fu_619_p3;
        recentVBools_data_load_reg_1269 <= recentVBools_data_q0;
        recentVBools_head_i <= p_tmp_i1_fu_619_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        p_tmp_i2_reg_1376 <= p_tmp_i2_fu_879_p3;
        recentABools_data_load_reg_1371 <= recentABools_data_q0;
        recentABools_head_i <= p_tmp_i2_fu_879_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        p_tmp_i_reg_1221 <= p_tmp_i_fu_451_p3;
        recentdatapoints_data_load_reg_1216 <= recentdatapoints_data_q0;
        recentdatapoints_head_i <= p_tmp_i_fu_451_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st14_fsm_13 == ap_CS_fsm)) begin
        recentABools_data_addr_reg_1366 <= tmp_i5_fu_863_p1;
        tmp_11_reg_1355 <= tmp_11_fu_853_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        recentVBools_data_addr_reg_1264 <= tmp_i2_fu_603_p1;
        tmp_s_reg_1253 <= tmp_s_fu_593_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        recentVBools_sum <= tmp_42_i_fu_753_p2;
        tmp_4_reg_1295 <= tmp_4_fu_704_p2;
        tmp_i3_reg_1325 <= tmp_i3_fu_802_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        tmp_20_reg_1411 <= tmp_20_fu_1046_p2;
        tmp_23_reg_1416 <= tmp_23_fu_1051_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// out_r_ap_vld assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        out_r_ap_vld = ap_const_logic_1;
    end else begin
        out_r_ap_vld = ap_const_logic_0;
    end
end

/// recentABools_data_address0 assign process. ///
always @ (ap_CS_fsm or recentABools_data_addr_reg_1366 or tmp_i5_fu_863_p1 or tmp_53_i_fu_949_p1)
begin
    if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        recentABools_data_address0 = recentABools_data_addr_reg_1366;
    end else if ((ap_ST_st16_fsm_15 == ap_CS_fsm)) begin
        recentABools_data_address0 = tmp_53_i_fu_949_p1;
    end else if ((ap_ST_st14_fsm_13 == ap_CS_fsm)) begin
        recentABools_data_address0 = tmp_i5_fu_863_p1;
    end else begin
        recentABools_data_address0 = 'bx;
    end
end

/// recentABools_data_ce0 assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm))) begin
        recentABools_data_ce0 = ap_const_logic_1;
    end else begin
        recentABools_data_ce0 = ap_const_logic_0;
    end
end

/// recentABools_data_we0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        recentABools_data_we0 = ap_const_logic_1;
    end else begin
        recentABools_data_we0 = ap_const_logic_0;
    end
end

/// recentVBools_data_address0 assign process. ///
always @ (ap_CS_fsm or recentVBools_data_addr_reg_1264 or tmp_i2_fu_603_p1 or tmp_46_i_fu_689_p1)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        recentVBools_data_address0 = recentVBools_data_addr_reg_1264;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        recentVBools_data_address0 = tmp_46_i_fu_689_p1;
    end else if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        recentVBools_data_address0 = tmp_i2_fu_603_p1;
    end else begin
        recentVBools_data_address0 = 'bx;
    end
end

/// recentVBools_data_ce0 assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm) | (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        recentVBools_data_ce0 = ap_const_logic_1;
    end else begin
        recentVBools_data_ce0 = ap_const_logic_0;
    end
end

/// recentVBools_data_we0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        recentVBools_data_we0 = ap_const_logic_1;
    end else begin
        recentVBools_data_we0 = ap_const_logic_0;
    end
end

/// recentdatapoints_data_address0 assign process. ///
always @ (ap_CS_fsm or recentdatapoints_data_addr_reg_1196 or tmp_i_4_fu_395_p1 or tmp_39_i_fu_491_p1 or tmp_i4_fu_807_p1)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        recentdatapoints_data_address0 = recentdatapoints_data_addr_reg_1196;
    end else if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        recentdatapoints_data_address0 = tmp_i4_fu_807_p1;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        recentdatapoints_data_address0 = tmp_39_i_fu_491_p1;
    end else if ((ap_ST_st1_fsm_0 == ap_CS_fsm)) begin
        recentdatapoints_data_address0 = tmp_i_4_fu_395_p1;
    end else begin
        recentdatapoints_data_address0 = 'bx;
    end
end

/// recentdatapoints_data_ce0 assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | (ap_ST_st2_fsm_1 == ap_CS_fsm) | (ap_ST_st3_fsm_2 == ap_CS_fsm) | (ap_ST_st10_fsm_9 == ap_CS_fsm))) begin
        recentdatapoints_data_ce0 = ap_const_logic_1;
    end else begin
        recentdatapoints_data_ce0 = ap_const_logic_0;
    end
end

/// recentdatapoints_data_we0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        recentdatapoints_data_we0 = ap_const_logic_1;
    end else begin
        recentdatapoints_data_we0 = ap_const_logic_0;
    end
end

/// stim_ap_vld assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        stim_ap_vld = ap_const_logic_1;
    end else begin
        stim_ap_vld = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AstimDelay_load_op_fu_400_p2 = (AstimDelay + ap_const_lv32_1);
assign VstimDelay_load_op_fu_414_p2 = (VstimDelay + ap_const_lv32_1);

/// ap_sig_bdd_209 assign process. ///
always @ (last_sample_is_V_load_load_fu_786_p1 or tmp_3_fu_780_p2)
begin
    ap_sig_bdd_209 = (~(ap_const_lv1_0 == tmp_3_fu_780_p2) & (ap_const_lv1_0 == last_sample_is_V_load_load_fu_786_p1));
end

/// ap_sig_bdd_214 assign process. ///
always @ (last_sample_is_V_load_load_fu_786_p1 or tmp_3_fu_780_p2)
begin
    ap_sig_bdd_214 = ((ap_const_lv1_0 == tmp_3_fu_780_p2) & ~(ap_const_lv1_0 == last_sample_is_V_load_load_fu_786_p1));
end

/// ap_sig_bdd_234 assign process. ///
always @ (last_sample_is_A_load_load_fu_1026_p1 or or_cond2_fu_1030_p2)
begin
    ap_sig_bdd_234 = (~(ap_const_lv1_0 == or_cond2_fu_1030_p2) & (ap_const_lv1_0 == last_sample_is_A_load_load_fu_1026_p1));
end

/// ap_sig_bdd_242 assign process. ///
always @ (last_sample_is_A_load_load_fu_1026_p1 or or_cond2_fu_1030_p2)
begin
    ap_sig_bdd_242 = ((ap_const_lv1_0 == or_cond2_fu_1030_p2) & ~(ap_const_lv1_0 == last_sample_is_A_load_load_fu_1026_p1));
end
assign datapointA_fu_811_p3 = ((tmp_i3_reg_1325)? recentdatapoints_data_q0: ap_const_lv16_0);
assign datapointV_fu_568_p3 = ((tmp_i9_fu_562_p2)? ap_const_lv16_0: recentdatapoints_data_q0);
assign extLd1_fu_737_p1 = $unsigned(recentVBools_data_load_reg_1269);
assign extLd2_fu_967_p1 = $unsigned(recentABools_data_load_reg_1371);
assign grp_fu_583_ce = ap_const_logic_1;
assign grp_fu_583_p0 = vflip;
assign grp_fu_583_p1 = datapointV_reg_1238;
assign grp_fu_843_ce = ap_const_logic_1;
assign grp_fu_843_p0 = aflip;
assign grp_fu_843_p1 = datapointA_reg_1335;
assign i_1_fu_478_p2 = (p_tmp_i_reg_1221 + ap_const_lv32_13);
assign i_2_fu_663_p2 = (p_tmp_i1_reg_1274 + ap_const_lv32_FFFFFFFF);
assign i_3_fu_676_p2 = (p_tmp_i1_reg_1274 + ap_const_lv32_A);
assign i_4_fu_923_p2 = (p_tmp_i2_reg_1376 + ap_const_lv32_FFFFFFFF);
assign i_5_fu_936_p2 = (p_tmp_i2_reg_1376 + ap_const_lv32_1D);
assign i_fu_465_p2 = (p_tmp_i_reg_1221 + ap_const_lv32_FFFFFFFF);
assign icmp_fu_1020_p2 = ($signed(tmp_27_fu_1010_p4) > $signed(28'b0000000000000000000000000000)? 1'b1: 1'b0);
assign last_sample_is_A_load_load_fu_1026_p1 = last_sample_is_A;
assign last_sample_is_V_load_load_fu_786_p1 = last_sample_is_V;
assign not_tmp_i2_fu_694_p2 = (tmp_43_i_fu_649_p3 != ap_const_lv32_0? 1'b1: 1'b0);
assign not_tmp_i5_fu_954_p2 = (tmp_50_i_fu_909_p3 != ap_const_lv32_0? 1'b1: 1'b0);
assign or_cond1_fu_1151_p2 = (tmp1_fu_1146_p2 & tmp_21_fu_1134_p2);
assign or_cond2_fu_1030_p2 = (icmp_reg_1397 & tmp_13_reg_1340);
assign or_cond4_fu_1092_p2 = (tmp_17_fu_1080_p2 | tmp_18_fu_1086_p2);
assign or_cond8_fu_1129_p2 = (tmp_19_fu_1123_p2 & tmp_20_reg_1411);
assign or_cond_fu_1068_p2 = (tmp_15_fu_1056_p2 | tmp_16_fu_1062_p2);
assign out_r = $unsigned(storemerge1_cast_fu_1118_p0);
assign p_0_i2_cast_fu_1000_p1 = $unsigned(p_0_i2_fu_995_p2);
assign p_0_i2_fu_995_p2 = (recentABools_data_q0 & not_tmp_i5_reg_1392);
assign p_0_i_cast_fu_770_p1 = $unsigned(p_0_i_fu_765_p2);
assign p_0_i_fu_765_p2 = (recentVBools_data_q0 & not_tmp_i2_reg_1290);
assign p_i1_fu_681_p3 = ((tmp_25_fu_668_p3)? i_3_fu_676_p2: i_2_fu_663_p2);
assign p_i2_fu_941_p3 = ((tmp_26_fu_928_p3)? i_5_fu_936_p2: i_4_fu_923_p2);
assign p_i_fu_483_p3 = ((tmp_12_fu_470_p3)? i_1_fu_478_p2: i_fu_465_p2);
assign p_s_fu_1157_p3 = ((or_cond1_fu_1151_p2)? ap_const_lv6_36: ap_const_lv6_21);
assign p_tmp_i1_fu_619_p3 = ((tmp_45_i_fu_613_p2)? ap_const_lv32_0: tmp_44_i_fu_608_p2);
assign p_tmp_i2_fu_879_p3 = ((tmp_52_i_fu_873_p2)? ap_const_lv32_0: tmp_51_i_fu_868_p2);
assign p_tmp_i_fu_451_p3 = ((tmp_38_i_fu_445_p2)? ap_const_lv32_0: tmp_37_i_fu_440_p2);
assign recentABools_data_d0 = tmp_11_reg_1355;
assign recentABools_len_load_op_fu_903_p2 = (recentABools_len + ap_const_lv32_1);
assign recentABools_sum_loc_i_fu_976_p3 = ((tmp_i4_5_reg_1382)? tmp_47_i_fu_970_p2: recentABools_sum);
assign recentVBools_data_d0 = tmp_s_reg_1253;
assign recentVBools_len_load_op_fu_643_p2 = (recentVBools_len + ap_const_lv32_1);
assign recentVBools_sum_loc_i_fu_746_p3 = ((tmp_i1_reg_1280)? tmp_40_i_fu_740_p2: recentVBools_sum);
assign recentdatapoints_data_d0 = datapoint;
assign recentdatapoints_len_load_op_fu_536_p2 = (recentdatapoints_len + ap_const_lv32_1);
assign recentdatapoints_sum_loc_i_fu_522_p3 = ((tmp_i_fu_503_p2)? tmp_33_i_fu_516_p2: recentdatapoints_sum);
assign stim = $unsigned(stim_new_1_cast_fu_1183_p0);
assign stim_new_1_cast_fu_1183_p0 = $signed(stim_new_1_fu_1171_p3);
assign stim_new_1_fu_1171_p3 = ((tmp_24_fu_1165_p2)? p_s_fu_1157_p3: ap_const_lv6_0);
assign storemerge1_cast_fu_1118_p0 = $signed(storemerge1_fu_1106_p3);
assign storemerge1_fu_1106_p3 = ((or_cond_fu_1068_p2)? storemerge_fu_1098_p3: ap_const_lv6_36);
assign storemerge_fu_1098_p3 = ((or_cond4_fu_1092_p2)? ap_const_lv6_0: ap_const_lv6_21);
assign sum_1_fu_774_p2 = (p_0_i_cast_fu_770_p1 + recentVBools_sum);
assign sum_3_fu_1004_p2 = (p_0_i2_cast_fu_1000_p1 + recentABools_sum);
assign tmp1_fu_1146_p2 = (tmp_22_fu_1140_p2 & tmp_23_reg_1416);
assign tmp_11_fu_853_p2 = ($signed(grp_fu_843_p2) > $signed(athresh)? 1'b1: 1'b0);
assign tmp_12_fu_470_p3 = i_fu_465_p2[ap_const_lv32_1F];
assign tmp_13_fu_830_p2 = ($signed(VbeatDelay_new_1_reg_259) > $signed(VbeatFallDelay_new_1_reg_275)? 1'b1: 1'b0);
assign tmp_15_fu_1056_p2 = (VbeatDelay_new_1_reg_259 != ap_const_lv32_0? 1'b1: 1'b0);
assign tmp_16_fu_1062_p2 = (last_sample_is_V_loc_2_reg_290 ^ ap_const_lv1_1);
assign tmp_17_fu_1080_p2 = (AbeatDelay_new_reg_308 != ap_const_lv32_0? 1'b1: 1'b0);
assign tmp_18_fu_1086_p2 = (tmp_14_reg_323 ^ ap_const_lv1_1);
assign tmp_19_fu_1123_p2 = ($signed(AbeatDelay_new_reg_308) > $signed(32'b1111101000)? 1'b1: 1'b0);
assign tmp_1_fu_351_p2 = (V_stim_reset == ap_const_lv16_0? 1'b1: 1'b0);
assign tmp_20_fu_1046_p2 = ($signed(tmp_7_reg_1201) > $signed(32'b11110)? 1'b1: 1'b0);
assign tmp_21_fu_1134_p2 = ($signed(VbeatDelay_new_1_reg_259) > $signed(AbeatDelay_new_reg_308)? 1'b1: 1'b0);
assign tmp_22_fu_1140_p2 = ($signed(AbeatDelay_new_reg_308) > $signed(32'b1110000100)? 1'b1: 1'b0);
assign tmp_23_fu_1051_p2 = ($signed(tmp_8_reg_1206) > $signed(32'b1011)? 1'b1: 1'b0);
assign tmp_24_fu_1165_p2 = (or_cond1_fu_1151_p2 | or_cond8_fu_1129_p2);
assign tmp_25_fu_668_p3 = i_2_fu_663_p2[ap_const_lv32_1F];
assign tmp_26_fu_928_p3 = i_4_fu_923_p2[ap_const_lv32_1F];
assign tmp_27_fu_1010_p4 = {{sum_3_fu_1004_p2[ap_const_lv32_1F : ap_const_lv32_4]}};
assign tmp_2_fu_361_p2 = (set_thresh == ap_const_lv16_0? 1'b1: 1'b0);
assign tmp_33_i_fu_516_p1 = $signed(recentdatapoints_data_load_reg_1216);
assign tmp_33_i_fu_516_p2 = (recentdatapoints_sum - tmp_33_i_fu_516_p1);
assign tmp_35_i_fu_530_p1 = $signed(datapoint);
assign tmp_35_i_fu_530_p2 = (recentdatapoints_sum_loc_i_fu_522_p3 + tmp_35_i_fu_530_p1);
assign tmp_36_i_fu_542_p3 = ((tmp_i_fu_503_p2)? ap_const_lv32_14: recentdatapoints_len_load_op_fu_536_p2);
assign tmp_37_i_fu_440_p2 = (recentdatapoints_head_i + ap_const_lv32_1);
assign tmp_38_i_fu_445_p2 = (tmp_37_i_fu_440_p2 == ap_const_lv32_14? 1'b1: 1'b0);
assign tmp_39_i_fu_491_p1 = $signed(p_i_fu_483_p3);
assign tmp_3_fu_780_p2 = ($signed(sum_1_fu_774_p2) > $signed(32'b101)? 1'b1: 1'b0);
assign tmp_40_i_fu_740_p2 = (recentVBools_sum - extLd1_fu_737_p1);
assign tmp_42_i_fu_753_p2 = (recentVBools_sum_loc_i_fu_746_p3 + val_assign_1_fu_734_p1);
assign tmp_43_i_fu_649_p3 = ((tmp_i1_fu_637_p2)? ap_const_lv32_B: recentVBools_len_load_op_fu_643_p2);
assign tmp_44_i_fu_608_p2 = (recentVBools_head_i + ap_const_lv32_1);
assign tmp_45_i_fu_613_p2 = (tmp_44_i_fu_608_p2 == ap_const_lv32_B? 1'b1: 1'b0);
assign tmp_46_i_fu_689_p1 = $signed(p_i1_fu_681_p3);
assign tmp_47_i_fu_970_p2 = (recentABools_sum - extLd2_fu_967_p1);
assign tmp_49_i_fu_983_p2 = (recentABools_sum_loc_i_fu_976_p3 + val_assign_2_fu_964_p1);
assign tmp_4_fu_704_p2 = (AbeatDelay + ap_const_lv32_1);
assign tmp_50_i_fu_909_p3 = ((tmp_i4_5_fu_897_p2)? ap_const_lv32_1E: recentABools_len_load_op_fu_903_p2);
assign tmp_51_i_fu_868_p2 = (recentABools_head_i + ap_const_lv32_1);
assign tmp_52_i_fu_873_p2 = (tmp_51_i_fu_868_p2 == ap_const_lv32_1E? 1'b1: 1'b0);
assign tmp_53_i_fu_949_p1 = $signed(p_i2_fu_941_p3);
assign tmp_5_fu_714_p2 = (VbeatDelay + ap_const_lv32_1);
assign tmp_6_fu_724_p2 = (VbeatFallDelay + ap_const_lv32_1);
assign tmp_7_fu_406_p3 = ((tmp_fu_341_p2)? AstimDelay_load_op_fu_400_p2: ap_const_lv32_1);
assign tmp_8_fu_420_p3 = ((tmp_1_fu_351_p2)? VstimDelay_load_op_fu_414_p2: ap_const_lv32_1);
assign tmp_fu_341_p2 = (A_stim_reset == ap_const_lv16_0? 1'b1: 1'b0);
assign tmp_i1_fu_637_p2 = (recentVBools_len == ap_const_lv32_B? 1'b1: 1'b0);
assign tmp_i2_fu_603_p1 = $signed(recentVBools_head_i);
assign tmp_i3_fu_802_p2 = (tmp_36_i_reg_1233 == ap_const_lv32_14? 1'b1: 1'b0);
assign tmp_i4_5_fu_897_p2 = (recentABools_len == ap_const_lv32_1E? 1'b1: 1'b0);
assign tmp_i4_fu_807_p1 = $signed(p_tmp_i_reg_1221);
assign tmp_i5_fu_863_p1 = $signed(recentABools_head_i);
assign tmp_i9_fu_562_p2 = (tmp_36_i_fu_542_p3 == ap_const_lv32_0? 1'b1: 1'b0);
assign tmp_i_4_fu_395_p1 = $signed(recentdatapoints_head_i);
assign tmp_i_fu_503_p2 = (recentdatapoints_len == ap_const_lv32_14? 1'b1: 1'b0);
assign tmp_s_fu_593_p2 = ($signed(grp_fu_583_p2) > $signed(vthresh)? 1'b1: 1'b0);
assign val_assign_1_fu_734_p1 = $unsigned(tmp_s_reg_1253);
assign val_assign_2_fu_964_p1 = $unsigned(tmp_11_reg_1355);


endmodule //singleDecision

